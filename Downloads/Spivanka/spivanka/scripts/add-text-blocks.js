require('dotenv').config({ path: '.env.local' });
const { MongoClient } = require('mongodb')

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/spivanka'

async function addTextBlocks() {
  const client = new MongoClient(MONGODB_URI)
  
  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    
    const db = client.db()
    const textBlocksCollection = db.collection('textBlocks')
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–ª–æ–∫–∏
    await textBlocksCollection.deleteMany({})
    console.log('üóëÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ —É–¥–∞–ª–µ–Ω—ã')
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏
    const textBlocks = [
      {
        key: 'uniqueMusic',
        title: '–£–Ω—ñ–∫–∞–ª—å–Ω–∞ –º—É–∑–∏–∫–∞',
        description: 'Suno AI –≥–µ–Ω–µ—Ä—É—î –ø–æ–≤–Ω—ñ –º—É–∑–∏—á–Ω—ñ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó (~2 —Ö–≤) –ø—Ä–æ—Ç—è–≥–æ–º 1-3 —Ö–≤–∏–ª–∏–Ω',
        icon: 'üéº',
        order: 1,
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        key: 'personalText',
        title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç',
        description: 'AI —Å—Ç–≤–æ—Ä—é—î —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Ç–µ–∫—Å—Ç–∏ –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö –¥–µ—Ç–∞–ª–µ–π',
        icon: '‚úçÔ∏è',
        order: 2,
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        key: 'beautifulCover',
        title: '–ö—Ä–∞—Å–∏–≤–∞ –æ–±–∫–ª–∞–¥–∏–Ω–∫–∞',
        description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –æ–±–∫–ª–∞–¥–∏–Ω–∫–∞ –¥–ª—è –≤–∞—à–æ–≥–æ –º—É–∑–∏—á–Ω–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è',
        icon: 'üé®',
        order: 3,
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        key: 'fastDelivery',
        title: '–®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞',
        description: '–û—Ç—Ä–∏–º–∞–π—Ç–µ –≥–æ—Ç–æ–≤–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑–∞ 5-10 —Ö–≤–∏–ª–∏–Ω –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏',
        icon: '‚ö°',
        order: 4,
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        key: 'highQuality',
        title: '–í–∏—Å–æ–∫–∞ —è–∫—ñ—Å—Ç—å',
        description: '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ —è–∫—ñ—Å—Ç—å –∑–≤—É–∫—É —Ç–∞ —Ç–µ–∫—Å—Ç—É –¥–ª—è –≤–∞—à–æ–≥–æ –æ—Å–æ–±–ª–∏–≤–æ–≥–æ –¥–Ω—è',
        icon: '‚≠ê',
        order: 5,
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ]
    
    const result = await textBlocksCollection.insertMany(textBlocks)
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${result.insertedCount} —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤:`)
    
    textBlocks.forEach((block, index) => {
      console.log(`  ${index + 1}. ${block.title} (${block.key})`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await client.close()
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ')
  }
}

addTextBlocks() 