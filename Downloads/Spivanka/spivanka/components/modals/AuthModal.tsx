'use client'

import React, { useState, useEffect } from 'react'
import { signIn, signOut, useSession } from 'next-auth/react'
import { X, Mail, Shield, CheckCircle, ArrowLeft, Calendar } from 'lucide-react'

interface AuthModalProps {
  isOpen: boolean
  onClose: () => void
  showContinueWithoutAuth?: boolean
}

export default function AuthModal({ isOpen, onClose, showContinueWithoutAuth = false }: AuthModalProps) {
  const { data: session, status } = useSession()
  const [isLoading, setIsLoading] = useState(false)
  const [hasCheckedConsents, setHasCheckedConsents] = useState(false)
  const [hasConsents, setHasConsents] = useState(false)
  const [showConsentForm, setShowConsentForm] = useState(false)
  const [consentData, setConsentData] = useState({
    termsConsent: false,
    marketingConsent: false,
    calendarContactsConsent: false
  })

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    if (isOpen) {
      setHasCheckedConsents(false)
      setHasConsents(false)
      setShowConsentForm(false)
      setConsentData({ termsConsent: false, marketingConsent: false, calendarContactsConsent: false })
    }
  }, [isOpen])

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    if (session?.user?.email && !hasCheckedConsents && !hasConsents && isOpen) {
      checkExistingConsents(session.user.email)
    }
  }, [session, hasCheckedConsents, hasConsents, isOpen])

  const checkExistingConsents = async (email: string) => {
    try {
      const response = await fetch('/api/consent/check', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email })
      })

      const data = await response.json()
      
      if (data.success) {
        if (data.hasConsents) {
          // –ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏—è —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
          if (data.hasCalendarContactsConsent) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            setHasConsents(true)
            onClose()
          } else {
            // –ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–≥–ª–∞—Å–∏–π
            setShowConsentForm(true)
            setHasConsents(false)
          }
        } else {
          // –ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏–π –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–≥–ª–∞—Å–∏–π
          setShowConsentForm(true)
          setHasConsents(false)
        }
      }
      
      setHasCheckedConsents(true)
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–≥–æ–¥:', error)
      setHasCheckedConsents(true)
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–≥–ª–∞—Å–∏–π
      setShowConsentForm(true)
      setHasConsents(false)
    }
  }

  const handleGoogleSignIn = async () => {
    setIsLoading(true)
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
      if (consentData.calendarContactsConsent) {
        // –ï—Å–ª–∏ –¥–∞–Ω–æ —Å–æ–≥–ª–∞—Å–∏–µ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        console.log('üîê –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤')
        window.location.href = '/api/auth/calendar-alt'
      } else {
        // –ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏—è –Ω–µ—Ç, –æ–±—ã—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google
        console.log('üîê –û–±—ã—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google')
        await signIn('google', { callbackUrl: '/create' })
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', error)
      alert('–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó')
    } finally {
      setIsLoading(false)
    }
  }

  const handleContinueWithoutAuth = () => {
    console.log('üöÄ –ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó')
    onClose()
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è
    window.location.href = '/create'
  }

  const handleConsentSubmit = async () => {
    if (!consentData.termsConsent) {
      alert('–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ–≥–æ–¥–∏—Ç–∏—Å—è –∑ —É–º–æ–≤–∞–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∞ –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ')
      return
    }

    setIsLoading(true)

    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è
      const consentResponse = await fetch('/api/consent/save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: session?.user?.email,
          termsConsent: consentData.termsConsent,
          marketingConsent: consentData.marketingConsent,
          calendarContactsConsent: consentData.calendarContactsConsent
        })
      })

      if (consentResponse.ok) {
        setHasConsents(true)
        onClose()
      } else {
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–≥–æ–¥')
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞:', error)
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–≥–æ–¥')
    } finally {
      setIsLoading(false)
    }
  }

  const handleBackToSignIn = () => {
    setShowConsentForm(false)
    setConsentData({ termsConsent: false, marketingConsent: false, calendarContactsConsent: false })
  }

  if (!isOpen) return null

  // –ï—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–≥–ª–∞—Å–∏–π
  if (showConsentForm && session) {
    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div className="bg-white rounded-2xl max-w-md w-full p-6 relative">
          <button
            onClick={onClose}
            className="absolute top-4 right-4 text-gray-400 hover:text-gray-600"
          >
            <X className="w-6 h-6" />
          </button>

          <div className="text-center mb-6">
            <div className="mx-auto w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mb-4">
              <Shield className="w-8 h-8 text-purple-600" />
            </div>
            <h2 className="text-2xl font-bold text-gray-900 mb-2">
              –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–≥–æ–¥
            </h2>
            <p className="text-gray-600">
              –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–≥–æ–¥–∏ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏
            </p>
          </div>

          <div className="space-y-4 mb-6">
            {/* –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ */}
            <label className="flex items-start space-x-3 cursor-pointer">
              <input
                type="checkbox"
                checked={consentData.termsConsent}
                onChange={(e) => setConsentData(prev => ({ ...prev, termsConsent: e.target.checked }))}
                className="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
                required
              />
              <div className="text-sm text-gray-700">
                <span className="font-medium">–Ø –ø–æ–≥–æ–¥–∂—É—é—Å—è –∑ </span>
                <a href="/terms" target="_blank" className="text-purple-600 hover:text-purple-700 underline">
                  —É–º–æ–≤–∞–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
                </a>
                <span className="font-medium"> —Ç–∞ </span>
                <a href="/privacy" target="_blank" className="text-purple-600 hover:text-purple-700 underline">
                  –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ
                </a>
                <span className="text-red-500"> *</span>
              </div>
            </label>

            {/* –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ */}
            <label className="flex items-start space-x-3 cursor-pointer">
              <input
                type="checkbox"
                checked={consentData.marketingConsent}
                onChange={(e) => setConsentData(prev => ({ ...prev, marketingConsent: e.target.checked }))}
                className="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
              />
              <div className="text-sm text-gray-700">
                <div className="flex items-center gap-2">
                  <Mail className="w-4 h-4 text-gray-500" />
                  <span>–Ø —Ö–æ—á—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç–∞ –Ω–æ–≤–∏–Ω–∏ –≤—ñ–¥ Spivanka</span>
                </div>
                <p className="text-xs text-gray-500 mt-1 ml-6">
                  –í–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å
                </p>
              </div>
            </label>

            {/* –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º */}
            <label className="flex items-start space-x-3 cursor-pointer">
              <input
                type="checkbox"
                checked={consentData.calendarContactsConsent}
                onChange={(e) => setConsentData(prev => ({ ...prev, calendarContactsConsent: e.target.checked }))}
                className="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
              />
              <div className="text-sm text-gray-700">
                <div className="flex items-center gap-2">
                  <Calendar className="w-4 h-4 text-gray-500" />
                  <span>–î–æ–∑–≤–æ–ª–∏—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å</span>
                </div>
                <p className="text-xs text-gray-500 mt-1 ml-6">
                  –ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü—ñ –¥–∞–Ω—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏—Ö –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ–¥—ñ–π –∑ –≤–∞—à–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                </p>
              </div>
            </label>
          </div>

          <div className="space-y-3">
            <button
              onClick={handleConsentSubmit}
              disabled={isLoading || !consentData.termsConsent}
              className="w-full flex items-center justify-center px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              {isLoading ? (
                <>
                  <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                  –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...
                </>
              ) : (
                <>
                  <CheckCircle className="w-5 h-5 mr-2" />
                  –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–≥–æ–¥–∏
                </>
              )}
            </button>

            <button
              onClick={() => signOut()}
              className="w-full px-6 py-3 text-gray-600 hover:text-gray-800 transition-colors"
            >
              –í–∏–π—Ç–∏ –∑ –∞–∫–∫–∞—É–Ω—Ç—É
            </button>
          </div>
        </div>
      </div>
    )
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-2xl max-w-md w-full p-6 relative">
        <button
          onClick={onClose}
          className="absolute top-4 right-4 text-gray-400 hover:text-gray-600"
        >
          <X className="w-6 h-6" />
        </button>

        <div className="text-center mb-6">
          <div className="mx-auto w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mb-4">
            <Shield className="w-8 h-8 text-purple-600" />
          </div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">
            –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
          </h2>
          <p className="text-gray-600">
            –£–≤—ñ–π–¥—ñ—Ç—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∞–±–æ –ø—Ä–æ–¥–æ–≤–∂—ñ—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
          </p>
        </div>

        <div className="space-y-4">
          {/* Google Sign In Button */}
          <button
            onClick={handleGoogleSignIn}
            disabled={isLoading}
            className="w-full flex items-center justify-center px-6 py-3 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            {isLoading ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-gray-600 mr-2"></div>
                –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
              </>
            ) : (
              <>
                <svg className="w-5 h-5 mr-2" viewBox="0 0 24 24">
                  <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                  <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                  <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                  <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                </svg>
                –£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
              </>
            )}
          </button>

          {/* Continue without auth button */}
          {showContinueWithoutAuth && (
            <button
              onClick={handleContinueWithoutAuth}
              className="w-full px-6 py-3 text-gray-600 hover:text-gray-800 transition-colors"
            >
              –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
            </button>
          )}

          {/* Sign out button for already authenticated users */}
          {session && (
            <button
              onClick={() => signOut()}
              className="w-full px-6 py-3 text-gray-600 hover:text-gray-800 transition-colors"
            >
              –í–∏–π—Ç–∏ –∑ –∞–∫–∫–∞—É–Ω—Ç—É
            </button>
          )}
        </div>
      </div>
    </div>
  )
} 