'use client'

import React, { useState } from 'react'
import { useSession } from 'next-auth/react'
import { useRouter } from 'next/navigation'
import { X, Mail, Shield, CheckCircle, Calendar } from 'lucide-react'

interface ConsentModalProps {
  isOpen: boolean
  onClose: () => void
}

export default function ConsentModal({ isOpen, onClose }: ConsentModalProps) {
  const { data: session } = useSession()
  const router = useRouter()
  const [isLoading, setIsLoading] = useState(false)
  const [consentData, setConsentData] = useState({
    termsConsent: false,
    marketingConsent: false,
    calendarContactsConsent: false
  })

  const handleConsentSubmit = async () => {
    if (!consentData.termsConsent) {
      alert('–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ–≥–æ–¥–∏—Ç–∏—Å—è –∑ —É–º–æ–≤–∞–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∞ –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ')
      return
    }

    setIsLoading(true)

    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è
      const consentResponse = await fetch('/api/consent/save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: session?.user?.email,
          termsConsent: consentData.termsConsent,
          marketingConsent: consentData.marketingConsent,
          calendarContactsConsent: consentData.calendarContactsConsent
        })
      })

      if (consentResponse.ok) {
        console.log('‚úÖ –ó–≥–æ–¥–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–∞–Ω–æ –ª–∏ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
        if (consentData.calendarContactsConsent) {
          // –ï—Å–ª–∏ –¥–∞–Ω–æ —Å–æ–≥–ª–∞—Å–∏–µ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
          console.log('üîê –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –∑–∞–ø–∏—Ç –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –¥–æ–∑–≤–æ–ª—ñ–≤ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤')
          window.location.href = '/api/auth/calendar-alt'
        } else {
          // –ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏—è –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
          onClose()
        }
      } else {
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–≥–æ–¥')
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞:', error)
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–≥–æ–¥')
    } finally {
      setIsLoading(false)
    }
  }

  const handleClose = () => {
    console.log('üîê –í–∏–∫–ª–∏–∫ handleClose, termsConsent:', consentData.termsConsent)
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏–π, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    if (!consentData.termsConsent) {
      console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —á–µ—Ä–µ–∑ –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–≥–æ–¥')
      console.log('üîÄ –ü–æ—Ç–æ—á–Ω–∏–π URL:', window.location.href)
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      console.log('üîÄ –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É')
      router.push('/')
      return
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ, –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
    console.log('‚úÖ –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–≥–æ–¥ (–∑–≥–æ–¥–∏ –Ω–∞–¥–∞–Ω–æ)')
    onClose()
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Escape
  React.useEffect(() => {
    const handleEscape = (event: KeyboardEvent) => {
      if (event.key === 'Escape') {
        console.log('üîê –ù–∞—Ç–∏—Å–Ω—É—Ç–æ Escape')
        handleClose()
      }
    }

    if (isOpen) {
      document.addEventListener('keydown', handleEscape)
      return () => document.removeEventListener('keydown', handleEscape)
    }
  }, [isOpen, consentData.termsConsent])

  if (!isOpen) return null

  return (
    <div 
      className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"
      onClick={handleClose}
    >
      <div 
        className="bg-white rounded-2xl max-w-md w-full p-6 relative"
        onClick={(e) => e.stopPropagation()}
      >
        <button
          onClick={(e) => {
            console.log('üîò –ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É X')
            e.stopPropagation()
            handleClose()
          }}
          className="absolute top-4 right-4 text-gray-400 hover:text-gray-600"
        >
          <X className="w-6 h-6" />
        </button>

        <div className="text-center mb-6">
          <div className="mx-auto w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mb-4">
            <Shield className="w-8 h-8 text-purple-600" />
          </div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">
            –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–≥–æ–¥
          </h2>
          <p className="text-gray-600">
            –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–≥–æ–¥–∏ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏
          </p>
        </div>

        <div className="space-y-4 mb-6">
          {/* –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ */}
          <label className="flex items-start space-x-3 cursor-pointer">
            <input
              type="checkbox"
              checked={consentData.termsConsent}
              onChange={(e) => setConsentData(prev => ({ ...prev, termsConsent: e.target.checked }))}
              className="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
              required
            />
            <div className="text-sm text-gray-700">
              <span className="font-medium">–Ø –ø–æ–≥–æ–¥–∂—É—é—Å—è –∑ </span>
              <a href="/terms" target="_blank" className="text-purple-600 hover:text-purple-700 underline">
                —É–º–æ–≤–∞–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
              </a>
              <span className="font-medium"> —Ç–∞ </span>
              <a href="/privacy" target="_blank" className="text-purple-600 hover:text-purple-700 underline">
                –ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ
              </a>
              <span className="text-red-500"> *</span>
            </div>
          </label>

          {/* –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ */}
          <label className="flex items-start space-x-3 cursor-pointer">
            <input
              type="checkbox"
              checked={consentData.marketingConsent}
              onChange={(e) => setConsentData(prev => ({ ...prev, marketingConsent: e.target.checked }))}
              className="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
            />
            <div className="text-sm text-gray-700">
              <div className="flex items-center gap-2">
                <Mail className="w-4 h-4 text-gray-500" />
                <span>–Ø —Ö–æ—á—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç–∞ –Ω–æ–≤–∏–Ω–∏ –≤—ñ–¥ Spivanka</span>
              </div>
              <p className="text-xs text-gray-500 mt-1 ml-6">
                –í–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å
              </p>
            </div>
          </label>

          {/* –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º */}
          <label className="flex items-start space-x-3 cursor-pointer">
            <input
              type="checkbox"
              checked={consentData.calendarContactsConsent}
              onChange={(e) => setConsentData(prev => ({ ...prev, calendarContactsConsent: e.target.checked }))}
              className="mt-1 w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
            />
            <div className="text-sm text-gray-700">
              <div className="flex items-center gap-2">
                <Calendar className="w-4 h-4 text-gray-500" />
                <span>–î–æ–∑–≤–æ–ª–∏—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å</span>
              </div>
              <p className="text-xs text-gray-500 mt-1 ml-6">
                –ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü—ñ –¥–∞–Ω—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏—Ö –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ–¥—ñ–π –∑ –≤–∞—à–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
              </p>
            </div>
          </label>
        </div>

        <div className="space-y-3">
          <button
            onClick={handleConsentSubmit}
            disabled={isLoading || !consentData.termsConsent}
            className="w-full flex items-center justify-center px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            {isLoading ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...
              </>
            ) : (
              <>
                <CheckCircle className="w-5 h-5 mr-2" />
                –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–≥–æ–¥–∏
              </>
            )}
          </button>
        </div>
      </div>
    </div>
  )
} 