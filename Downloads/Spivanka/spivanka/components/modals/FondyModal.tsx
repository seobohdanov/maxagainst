'use client'

import React, { useState, useEffect, useRef } from 'react'
import { X, CreditCard, Shield, CheckCircle } from 'lucide-react'

interface FondyModalProps {
  isOpen: boolean
  onClose: () => void
  onSuccess: () => void
  amount: number
  plan: 'basic' | 'premium'
  promoDiscount: number
}

declare global {
  interface Window {
    fondy: any
    fondyCallback?: (data: any) => void
  }
}

export const FondyModal: React.FC<FondyModalProps> = ({
  isOpen,
  onClose,
  onSuccess,
  amount,
  plan,
  promoDiscount
}) => {
  const [isLoading, setIsLoading] = useState(true)
  const [paymentData, setPaymentData] = useState<any>(null)
  const [error, setError] = useState<string | null>(null)
  const [isDemoMode, setIsDemoMode] = useState(false)
  const [isProcessing, setIsProcessing] = useState(false)
  const [widgetInitialized, setWidgetInitialized] = useState(false)
  const widgetRef = useRef<HTMLDivElement>(null)

  const finalAmount = Math.round(amount * (1 - promoDiscount / 100))

  useEffect(() => {
    if (isOpen) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
      const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1'
      const isHttp = window.location.protocol === 'http:'
      
      // –í–†–ï–ú–ï–ù–ù–û: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-—Ä–µ–∂–∏–º –ø–æ–∫–∞ merchant –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
      const isMerchantUnderReview = true // TODO: —É–±—Ä–∞—Ç—å –∫–æ–≥–¥–∞ merchant –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è
      
      if ((isLocalhost && isHttp) || isMerchantUnderReview) {
        setIsDemoMode(true)
        setIsLoading(false)
      } else {
        createPaymentData()
      }
    }
  }, [isOpen])

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–∂–µ—Ç –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞
    if (paymentData && !widgetInitialized && !isDemoMode) {
      initializeFondyWidget()
    }
  }, [paymentData, widgetInitialized, isDemoMode])

  const loadFondyScript = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Å–∫—Ä–∏–ø—Ç
    if (document.querySelector('script[src*="checkout.js"]')) {
      createPaymentData()
      return
    }

    const script = document.createElement('script')
    script.src = 'https://pay.fondy.eu/latest/checkout-vue/checkout.js'
    script.async = true
    script.onload = () => {
      console.log('Fondy script loaded')
      createPaymentData()
    }
    script.onerror = () => {
      setError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Fondy')
      setIsLoading(false)
    }
    document.head.appendChild(script)
  }

  const createPaymentData = async () => {
    try {
      setIsLoading(true)
      setError(null)

      const response = await fetch('/api/payment/fondy', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          amount: finalAmount,
          description: `–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—É–∑–∏—á–Ω–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è - ${plan} –ø–ª–∞–Ω`,
          orderId: `order_${Date.now()}_${Math.random().toString(36).substring(7)}`
        })
      })

      const result = await response.json()
      
      if (result.success) {
        setPaymentData(result.paymentData)
        setIsLoading(false)
      } else {
        throw new Error(result.error || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É')
      }
    } catch (error) {
      console.error('Error creating payment:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É')
      setIsLoading(false)
    }
  }

  const initializeFondyWidget = () => {
    if (!window.fondy || !paymentData || widgetInitialized) return

    try {
      console.log('Initializing Fondy widget...')
      console.log('Payment data:', paymentData)

      // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
      if (widgetRef.current) {
        widgetRef.current.innerHTML = ''
      }

      // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π callback –¥–ª—è Fondy
      window.fondyCallback = function(data: any) {
        console.log('Fondy callback received:', data)
        if (data.order_status === 'approved') {
          console.log('Payment approved:', data)
          onClose()
          onSuccess()
        } else if (data.order_status === 'declined') {
          console.error('Payment declined:', data)
          setError('–ü–ª–∞—Ç—ñ–∂ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ: ' + (data.response_description || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'))
        } else if (data.order_status === 'processing') {
          console.log('Payment processing:', data)
        } else {
          console.log('Other payment status:', data)
        }
      }

      // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑ Google Pay —Ç–∞ Apple Pay
      const config = {
        params: {
          merchant_id: paymentData.merchant_id,
          amount: paymentData.amount,
          currency: paymentData.currency,
          order_desc: paymentData.order_desc,
          order_id: paymentData.order_id,
          response_url: paymentData.response_url,
          server_callback_url: paymentData.server_callback_url,
          signature: paymentData.signature,
          lang: 'uk'
        },
        options: {
          methods: ['card', 'wallets'],
          default_country: 'UA',
          lang: 'uk',
          hide_title: true,
          button: true,
          full_screen: false,
          active_tab: 'card'
        }
      }

      console.log('Fondy widget config:', config)
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–∂–µ—Ç
      const result = window.fondy("#fondy-ua-checkout", config)
      console.log('Fondy widget initialization result:', result)

      setWidgetInitialized(true)
      console.log('Fondy widget initialized successfully')
    } catch (error) {
      console.error('Fondy widget initialization error:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤—ñ–¥–∂–µ—Ç—É –ø–ª–∞—Ç–µ–∂—É: ' + (error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'))
    }
  }

  const handleDemoPayment = async () => {
    setIsProcessing(true)
    
    // –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    await new Promise(resolve => setTimeout(resolve, 2000))
    
    setIsProcessing(false)
    onClose()
    onSuccess()
  }

  if (!isOpen) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-2xl max-w-lg w-full p-4 relative max-h-[80vh] overflow-y-auto">
        <button
          onClick={onClose}
          className="absolute top-3 right-3 text-gray-400 hover:text-gray-600 z-10"
        >
          <X size={20} />
        </button>

        <div className="text-center mb-4">
          <h2 className="text-xl font-bold text-gray-900 mb-1">
            –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Fondy
          </h2>
          <p className="text-sm text-gray-600">
            –ë–µ–∑–ø–µ—á–Ω–∞ –æ–ø–ª–∞—Ç–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
          </p>
        </div>

        <div className="mb-4">
          <div className="bg-gray-50 rounded-lg p-3 mb-3">
            <div className="flex justify-between items-center text-sm">
              <span className="text-gray-600">–ü–ª–∞–Ω:</span>
              <span className="font-semibold capitalize">{plan}</span>
            </div>
            <div className="flex justify-between items-center text-sm">
              <span className="text-gray-600">–í–∞—Ä—Ç—ñ—Å—Ç—å:</span>
              <span className="font-semibold">{amount} –≥—Ä–Ω</span>
            </div>
            {promoDiscount > 0 && (
              <div className="flex justify-between items-center text-sm text-green-600">
                <span>–ó–Ω–∏–∂–∫–∞:</span>
                <span>-{promoDiscount}%</span>
              </div>
            )}
            <div className="flex justify-between items-center font-bold border-t pt-2 mt-2">
              <span>–†–∞–∑–æ–º:</span>
              <span>{finalAmount} –≥—Ä–Ω</span>
            </div>
          </div>
        </div>

        {isDemoMode && (
          <div className="space-y-4">
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
              <div className="flex items-center">
                <Shield className="text-yellow-600 mr-2" size={20} />
                <div className="text-sm text-yellow-800">
                  <strong>–î–µ–º–æ-—Ä–µ–∂–∏–º</strong> - Merchant account –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó —É Fondy
                </div>
              </div>
            </div>
            
            <div className="bg-gray-50 rounded-lg p-4 space-y-3">
              <h3 className="font-semibold text-gray-800">üí≥ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –æ–ø–ª–∞—Ç–∏:</h3>
              <div className="grid grid-cols-1 gap-2 text-sm">
                <div><strong>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏:</strong> 4444 5555 6666 1111</div>
                <div><strong>–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó:</strong> 12/25</div>
                <div><strong>CVV:</strong> 123</div>
                <div><strong>–í–ª–∞—Å–Ω–∏–∫ –∫–∞—Ä—Ç–∫–∏:</strong> –¢–ê–†–ê–° –®–ï–í–ß–ï–ù–ö–û</div>
              </div>
              <div className="text-xs text-gray-600 mt-2">
                ‚ö†Ô∏è –¶–µ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ. –†–µ–∞–ª—å–Ω—ñ –≥—Ä–æ—à—ñ –Ω–µ —Å–ø–∏—Å—É—é—Ç—å—Å—è.
                <br />
                –ü—ñ—Å–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó merchant account –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ä–µ–∞–ª—å–Ω–∞ –æ–ø–ª–∞—Ç–∞.
              </div>
            </div>

            <button
              onClick={() => {
                // –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
                setTimeout(() => {
                  onSuccess()
                }, 1000)
              }}
              className="w-full bg-gradient-to-r from-blue-600 to-yellow-500 text-white py-3 px-4 rounded-lg font-semibold hover:from-blue-700 hover:to-yellow-600 transition-all shadow-lg"
            >
              –°–∏–º—É–ª—è—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ—ó –æ–ø–ª–∞—Ç–∏ üá∫üá¶
            </button>
          </div>
        )}

        {!isDemoMode && isLoading && (
          <div className="text-center py-8">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–∂–µ—Ç—É Fondy...</p>
          </div>
        )}

        {!isDemoMode && error && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
            <p className="text-red-800">{error}</p>
            <button
              onClick={() => {
                setError(null)
                setWidgetInitialized(false)
                createPaymentData()
              }}
              className="mt-2 bg-red-600 text-white px-4 py-2 rounded-lg text-sm hover:bg-red-700"
            >
              –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
            </button>
          </div>
        )}

        {!isDemoMode && !isLoading && !error && paymentData && (
          <div className="space-y-4">
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
              <div className="flex items-center">
                <CreditCard className="text-blue-600 mr-2" size={20} />
                <div className="text-sm text-blue-800">
                  <strong>–í—ñ–¥–∂–µ—Ç Fondy</strong> - –ö–∞—Ä—Ç–∫–∏ + Google Pay + Apple Pay
                </div>
              </div>
            </div>
            
            <div 
              id="fondy-ua-checkout" 
              ref={widgetRef}
              className="min-h-[400px] border border-gray-200 rounded-lg p-4 bg-white"
            >
              {/* –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω –≤–∏–¥–∂–µ—Ç Fondy */}
            </div>
            
            {!widgetInitialized && (
              <div className="text-center py-4">
                <button
                  onClick={initializeFondyWidget}
                  className="bg-gradient-to-r from-blue-600 to-yellow-500 text-white py-3 px-6 rounded-lg font-semibold hover:from-blue-700 hover:to-yellow-600 transition-all shadow-lg"
                >
                  –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—ñ–¥–∂–µ—Ç –æ–ø–ª–∞—Ç–∏ üá∫üá¶
                </button>
              </div>
            )}
          </div>
        )}

        <p className="text-xs text-gray-500 text-center mt-4">
          –û–ø–ª–∞—Ç–∞ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è –±–µ–∑–ø–µ—á–Ω–æ —á–µ—Ä–µ–∑ Fondy
        </p>
      </div>
    </div>
  )
} 