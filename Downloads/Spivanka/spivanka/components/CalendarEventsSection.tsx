'use client'

import React, { useState, useEffect } from 'react'
import { CalendarEvent } from '@/types'
import { Calendar, Gift, Heart, Star, Plus, Cake, PartyPopper } from 'lucide-react'
import { motion } from 'framer-motion'
import { safeToast } from '@/lib/toast'

interface CalendarEventsSectionProps {
  onCreateGreeting: (eventData: { recipientName: string; occasion: string; relationship?: string; isCustomOccasion?: boolean }) => void
}

export const CalendarEventsSection: React.FC<CalendarEventsSectionProps> = ({
  onCreateGreeting
}) => {
  const [events, setEvents] = useState<CalendarEvent[]>([])
  const [isLoading, setIsLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [needsReauth, setNeedsReauth] = useState(false)
  const [needsCalendarAuth, setNeedsCalendarAuth] = useState(false)
  const [calendarConnected, setCalendarConnected] = useState(false)

  const handleConnectCalendar = async () => {
    try {
      setIsLoading(true)
      setError(null)
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è
      window.location.href = '/api/auth/calendar'
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
      setIsLoading(false)
    }
  }

  const handleReauthWithCalendar = async () => {
    try {
      setIsLoading(true)
      setError(null)
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è
      window.location.href = '/api/auth/calendar'
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º')
      setIsLoading(false)
    }
  }

  const checkCalendarStatus = async () => {
    try {
      const response = await fetch('/api/auth/calendar/status')
      const data = await response.json()
      
      if (response.ok) {
        setCalendarConnected(data.connected)
        setNeedsCalendarAuth(!data.connected)
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error)
    }
  }

  const handleSync = async () => {
    try {
      setIsLoading(true)
      setError(null)
      
      const response = await fetch('/api/calendar/cache', { method: 'POST' })
      const data = await response.json()
      
      if (!response.ok) {
        if (data.needsReauth) {
          // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã
          console.log('üîÑ –ü—ã—Ç–∞—é—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è...')
          const refreshResponse = await fetch('/api/calendar/refresh-tokens', { method: 'POST' })
          const refreshData = await refreshResponse.json()
          
          if (refreshResponse.ok) {
            console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã, –ø–æ–≤—Ç–æ—Ä—è—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...')
            // –ü–æ–≤—Ç–æ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏
            const retryResponse = await fetch('/api/calendar/cache', { method: 'POST' })
            const retryData = await retryResponse.json()
            
            if (retryResponse.ok) {
              safeToast.success(`–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ ${retryData.eventsCount} –ø–æ–¥—ñ–π`)
              await loadCalendarEvents()
              return
            } else {
              setNeedsReauth(true)
              setError('–¢–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è.')
            }
          } else {
            setNeedsReauth(true)
            setError('–¢–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è.')
          }
        } else {
          setError(data.error || '–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó')
        }
        return
      }
      
      safeToast.success(`–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ ${data.eventsCount} –ø–æ–¥—ñ–π`)
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await loadCalendarEvents()
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
    } finally {
      setIsLoading(false)
    }
  }

  const handleClearCache = async () => {
    try {
      setIsLoading(true)
      setError(null)
      
      // –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –∫—ç—à
      const clearResponse = await fetch('/api/calendar/cache/clear', { method: 'POST' })
      const clearData = await clearResponse.json()
      
      if (!clearResponse.ok) {
        setError(clearData.error || '–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É')
        return
      }
      
      // –ó–∞—Ç–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ
      const syncResponse = await fetch('/api/calendar/cache', { method: 'POST' })
      const syncData = await syncResponse.json()
      
      if (!syncResponse.ok) {
        setError(syncData.error || '–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó')
        return
      }
      
      safeToast.success(`–ö–µ—à –æ—á–∏—â–µ–Ω–æ —ñ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ ${syncData.eventsCount} –ø–æ–¥—ñ–π`)
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await loadCalendarEvents()
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
    } finally {
      setIsLoading(false)
    }
  }

  const loadCalendarEvents = async () => {
    try {
      setIsLoading(true)
      setError(null)
      
      const response = await fetch('/api/calendar/events')
      const data = await response.json()
      
      if (!response.ok) {
        if (data.needsCalendarAuth) {
          setNeedsCalendarAuth(true)
          setError('–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ Google Calendar.')
          setEvents([])
          return
        }
        
        if (data.needsSync) {
          setError('–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ñ –ø–æ–¥—ñ—ó –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω—ñ. –ù–µ–æ–±—Ö—ñ–¥–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è.')
          setEvents([])
          setNeedsReauth(false)
          setNeedsCalendarAuth(false)
          return
        }
        
        if (data.needsReauth) {
          // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã
          console.log('üîÑ –ü—ã—Ç–∞—é—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è...')
          const refreshResponse = await fetch('/api/calendar/refresh-tokens', { method: 'POST' })
          const refreshData = await refreshResponse.json()
          
          if (refreshResponse.ok) {
            console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã, –ø–æ–≤—Ç–æ—Ä—è—é –∑–∞–≥—Ä—É–∑–∫—É —Å–æ–±—ã—Ç–∏–π...')
            // –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏
            const retryResponse = await fetch('/api/calendar/events')
            const retryData = await retryResponse.json()
            
            if (retryResponse.ok) {
              const allEvents = [...(retryData.events.birthdays || []), ...(retryData.events.holidays || [])]
              setEvents(allEvents)
              setNeedsReauth(false)
              setNeedsCalendarAuth(false)
              return
            } else {
              setNeedsReauth(true)
              setError('–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
            }
          } else {
            setNeedsReauth(true)
            setError('–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
          }
        } else {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å —Ç–æ–∫–µ–Ω–∞–º–∏
          const errorMessage = data.error || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π'
          if (errorMessage.includes('invalid authentication credentials') || 
              errorMessage.includes('insufficient authentication scopes')) {
            setNeedsCalendarAuth(true)
            setError('–¢–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è.')
          } else {
            setError(errorMessage)
          }
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        if (data.events && data.isDemo) {
          const allEvents = [...data.events.birthdays, ...data.events.holidays]
          setEvents(allEvents)
        }
        return
      }
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const allEvents = [...(data.events.birthdays || []), ...(data.events.holidays || [])]
      setEvents(allEvents)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –∫—ç—à —É—Å—Ç–∞—Ä–µ–ª
      if (data.expired) {
        setError('–î–∞–Ω—ñ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è.')
      }
      setNeedsReauth(false)
      setNeedsCalendarAuth(false)
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∏—Ö –ø–æ–¥—ñ–π:', error)
      setError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
    } finally {
      setIsLoading(false)
    }
  }

  useEffect(() => {
    checkCalendarStatus()
    loadCalendarEvents()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    const urlParams = new URLSearchParams(window.location.search)
    if (urlParams.get('calendar_connected') === 'true') {
      safeToast.success('–ö–∞–ª–µ–Ω–¥–∞—Ä—å —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ!')
      setCalendarConnected(true)
      setNeedsCalendarAuth(false)
      // –û—á–∏—â–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      window.history.replaceState({}, '', window.location.pathname)
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      setTimeout(() => {
        handleSync()
      }, 1000)
    } else if (urlParams.get('calendar_error')) {
      const errorType = urlParams.get('calendar_error')
      safeToast.error(`–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è: ${errorType}`)
      // –û—á–∏—â–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      window.history.replaceState({}, '', window.location.pathname)
    }
  }, [])

  const handleCreateGreeting = (event: CalendarEvent) => {
    let recipientName = ''
    let occasion = ''
    let relationship = ''
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–≤–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è
    if (event.type === 'birthday') {
      occasion = '–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è'
      
      // –î–ª—è –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      recipientName = event.recipient || (event as any).relationship || ''
      relationship = (event as any).relationship || ''
      
      console.log('üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è –¥–Ω—è –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è:', { recipientName, relationship })
    } else if (event.type === 'holiday') {
      // –î–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–∫ –ø–æ–≤–æ–¥, –∏–º—è –ù–ï –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
      occasion = event.title
      recipientName = ''
      relationship = ''
    } else {
      // –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∏–º—è –ù–ï –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
      occasion = event.title
      recipientName = ''
      relationship = ''
    }
    
    console.log('üìù –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö —É —Ñ–æ—Ä–º—É:', { recipientName, occasion, relationship, isCustomOccasion: event.type === 'holiday' || event.type === 'custom' })
    
    onCreateGreeting({
      recipientName,
      occasion,
      relationship,
      isCustomOccasion: event.type === 'holiday' || event.type === 'custom'
    })
  }

  const formatDate = (dateString: string) => {
    const date = new Date(dateString)
    const now = new Date()
    const currentYear = now.getFullYear()
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è (–ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø—Ä–æ—à–ª—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥)
    const normalizedDate = new Date(date)
    if (normalizedDate.getFullYear() < currentYear) {
      normalizedDate.setFullYear(currentYear + 1)
    }
    
    const diffTime = normalizedDate.getTime() - now.getTime()
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))
    
    const formattedDate = normalizedDate.toLocaleDateString('uk-UA', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    })
    
    if (diffDays === 0) {
      return `${formattedDate} (—Å—å–æ–≥–æ–¥–Ω—ñ)`
    } else if (diffDays === 1) {
      return `${formattedDate} (–∑–∞–≤—Ç—Ä–∞)`
    } else if (diffDays <= 7) {
      return `${formattedDate} (—á–µ—Ä–µ–∑ ${diffDays} –¥–Ω.)`
    } else {
      return formattedDate
    }
  }

  const getEventIcon = (type: string) => {
    switch (type) {
      case 'birthday':
        return <Cake className="w-5 h-5 text-pink-500" />
      case 'holiday':
        return <PartyPopper className="w-5 h-5 text-purple-500" />
      default:
        return <Calendar className="w-5 h-5 text-blue-500" />
    }
  }

  const getEventColor = (type: string) => {
    switch (type) {
      case 'birthday':
        return 'from-pink-50 to-rose-50 border-pink-200'
      case 'holiday':
        return 'from-purple-50 to-indigo-50 border-purple-200'
      default:
        return 'from-blue-50 to-cyan-50 border-blue-200'
    }
  }

  // –†–∞–∑–¥–µ–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
  const now = new Date()
  const currentYear = now.getFullYear()
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞—Ç—ã —Å–æ–±—ã—Ç–∏—è (—É—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–¥)
  const normalizeEventDate = (dateString: string) => {
    const eventDate = new Date(dateString)
    const eventYear = eventDate.getFullYear()
    
    // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –≤ –ø—Ä–æ—à–ª–æ–º –≥–æ–¥—É, –ø–µ—Ä–µ–Ω–æ—Å–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
    if (eventYear < currentYear) {
      eventDate.setFullYear(currentYear + 1)
    }
    
    return eventDate
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ –¥–∞—Ç–µ —Å —É—á–µ—Ç–æ–º –≥–æ–¥–∞
  const birthdays = events
    .filter(event => event.type === 'birthday')
    .sort((a, b) => {
      const dateA = normalizeEventDate(a.date)
      const dateB = normalizeEventDate(b.date)
      return dateA.getTime() - dateB.getTime()
    })
  
  const holidays = events
    .filter(event => event.type === 'holiday' || event.type === 'custom')
    .sort((a, b) => {
      const dateA = normalizeEventDate(a.date)
      const dateB = normalizeEventDate(b.date)
      return dateA.getTime() - dateB.getTime()
    })

  if (isLoading) {
    return (
      <div className="bg-white rounded-2xl p-6 shadow-sm">
        <div className="flex items-center gap-3 mb-4">
          <Calendar className="w-6 h-6 text-gray-600" />
          <h3 className="text-xl font-semibold text-gray-800">–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ñ –ø–æ–¥—ñ—ó</h3>
        </div>
        <div className="flex items-center justify-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300"></div>
          <span className="ml-3 text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π...</span>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="bg-white rounded-2xl p-6 shadow-sm">
        <div className="flex items-center gap-3 mb-4">
          <Calendar className="w-6 h-6 text-gray-600" />
          <h3 className="text-xl font-semibold text-gray-800">–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ñ –ø–æ–¥—ñ—ó</h3>
        </div>
        <div className="text-center py-8">
          <div className="text-red-500 mb-4">{error}</div>
          <div className="flex gap-3 justify-center">
            {needsCalendarAuth ? (
              <button
                onClick={handleConnectCalendar}
                className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
              >
                –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä
              </button>
            ) : error.includes('insufficient authentication scopes') || error.includes('–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω') || error.includes('invalid authentication credentials') ? (
              <button
                onClick={handleConnectCalendar}
                className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
              >
                –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä
              </button>
            ) : needsReauth ? (
              <div className="flex gap-2 justify-center">
                <button
                  onClick={handleReauthWithCalendar}
                  className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
                >
                  –ü–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è
                </button>
                <button
                  onClick={async () => {
                    try {
                      setIsLoading(true)
                      const response = await fetch('/api/calendar/refresh-tokens', { method: 'POST' })
                      const data = await response.json()
                      
                      if (response.ok) {
                        safeToast.success('–¢–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–Ω–æ–≤–ª–µ–Ω–æ!')
                        await loadCalendarEvents()
                      } else {
                        safeToast.error(data.error || '–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤')
                      }
                    } catch (error) {
                      console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤:', error)
                      safeToast.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤')
                    } finally {
                      setIsLoading(false)
                    }
                  }}
                  disabled={isLoading}
                  className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors disabled:opacity-50"
                >
                  {isLoading ? '–û–Ω–æ–≤–ª–µ–Ω–Ω—è...' : '–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –æ–Ω–æ–≤–∏—Ç–∏'}
                </button>
              </div>
            ) : (
              <>
                <button
                  onClick={loadCalendarEvents}
                  className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
                >
                  –û–Ω–æ–≤–∏—Ç–∏
                </button>
                {error.includes('—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è') && (
                  <button
                    onClick={handleSync}
                    className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors"
                  >
                    –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏
                  </button>
                )}
              </>
            )}
          </div>
        </div>
      </div>
    )
  }

  if (events.length === 0) {
    return (
      <div className="bg-white rounded-2xl p-6 shadow-sm">
        <div className="flex items-center gap-3 mb-4">
          <Calendar className="w-6 h-6 text-gray-600" />
          <h3 className="text-xl font-semibold text-gray-800">–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ñ –ø–æ–¥—ñ—ó</h3>
        </div>
        <div className="text-center py-8">
          <Calendar className="w-12 h-12 text-gray-300 mx-auto mb-4" />
          <p className="text-gray-500">–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ñ –ø–æ–¥—ñ—ó –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ</p>
          <p className="text-sm text-gray-400 mt-2">
            {!calendarConnected ? 
              '–°–ø–æ—á–∞—Ç–∫—É –ø—ñ–¥–∫–ª—é—á—ñ—Ç—å Google Calendar' : 
              '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏" –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π –∑ Google Calendar'
            }
          </p>
          <div className="mt-4">
            {!calendarConnected ? (
              <button
                onClick={handleConnectCalendar}
                className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
              >
                –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä
              </button>
            ) : (
              <div className="flex gap-2 justify-center">
                <button
                  onClick={handleSync}
                  className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors"
                >
                  –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä
                </button>
                <button
                  onClick={handleConnectCalendar}
                  className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
                  title="–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ Google Calendar"
                >
                  –ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="bg-white rounded-2xl p-6 shadow-sm">
      <div className="flex items-center gap-3 mb-6">
        <Calendar className="w-6 h-6 text-gray-600" />
        <h3 className="text-xl font-semibold text-gray-800">–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ñ –ø–æ–¥—ñ—ó</h3>
        <span className="text-sm text-gray-500">({events.length})</span>
        {calendarConnected && (
          <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full">
            –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ
          </span>
        )}
        <div className="ml-auto">
          {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–Ω–æ–ø–æ–∫ */}
          <div className="hidden sm:flex gap-2">
            <button
              onClick={handleSync}
              disabled={isLoading}
              className="bg-green-500 text-white px-3 py-1 rounded-lg hover:bg-green-600 transition-colors disabled:opacity-50 text-sm"
            >
              {isLoading ? '–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è...' : '–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏'}
            </button>
            <button
              onClick={handleClearCache}
              disabled={isLoading}
              className="bg-orange-500 text-white px-3 py-1 rounded-lg hover:bg-orange-600 transition-colors disabled:opacity-50 text-sm"
              title="–û—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à —ñ –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏"
            >
              {isLoading ? '–û—á–∏—â–µ–Ω–Ω—è...' : '–ü–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏'}
            </button>
            <button
              onClick={async () => {
                try {
                  setIsLoading(true)
                  const response = await fetch('/api/calendar/refresh-tokens', { method: 'POST' })
                  const data = await response.json()
                  
                  if (response.ok) {
                    safeToast.success('–¢–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–Ω–æ–≤–ª–µ–Ω–æ!')
                    await loadCalendarEvents()
                  } else {
                    safeToast.error(data.error || '–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤')
                  }
                } catch (error) {
                  console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤:', error)
                  safeToast.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤')
                } finally {
                  setIsLoading(false)
                }
              }}
              disabled={isLoading}
              className="bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition-colors disabled:opacity-50 text-sm"
              title="–û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"
            >
              {isLoading ? '–û–Ω–æ–≤–ª–µ–Ω–Ω—è...' : '–û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏'}
            </button>
          </div>
        </div>
      </div>

      {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–Ω–æ–ø–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è */}
      <div className="block sm:hidden mb-4">
        <div className="flex gap-2">
          <button
            onClick={handleSync}
            disabled={isLoading}
            className="flex-1 bg-green-500 text-white py-2 px-3 rounded-lg hover:bg-green-600 transition-colors disabled:opacity-50 text-sm font-medium"
          >
            {isLoading ? '–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è...' : 'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏'}
          </button>
          <button
            onClick={handleClearCache}
            disabled={isLoading}
            className="flex-1 bg-orange-500 text-white py-2 px-3 rounded-lg hover:bg-orange-600 transition-colors disabled:opacity-50 text-sm font-medium"
            title="–û—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à —ñ –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏"
          >
            {isLoading ? '–û—á–∏—â–µ–Ω–Ω—è...' : 'üîÑ –ü–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏'}
          </button>
          <button
            onClick={async () => {
              try {
                setIsLoading(true)
                const response = await fetch('/api/calendar/refresh-tokens', { method: 'POST' })
                const data = await response.json()
                
                if (response.ok) {
                  safeToast.success('–¢–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–Ω–æ–≤–ª–µ–Ω–æ!')
                  await loadCalendarEvents()
                } else {
                  safeToast.error(data.error || '–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤')
                }
              } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤:', error)
                safeToast.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤')
              } finally {
                setIsLoading(false)
              }
            }}
            disabled={isLoading}
            className="flex-1 bg-blue-500 text-white py-2 px-3 rounded-lg hover:bg-blue-600 transition-colors disabled:opacity-50 text-sm font-medium"
            title="–û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"
          >
            {isLoading ? '–û–Ω–æ–≤–ª–µ–Ω–Ω—è...' : 'üîë –û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏'}
          </button>
        </div>
      </div>

      <div className="space-y-6">
        {/* –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è */}
        {birthdays.length > 0 && (
          <div>
            <div className="flex items-center gap-2 mb-4">
              <Cake className="w-5 h-5 text-pink-500" />
              <h4 className="text-lg font-semibold text-gray-700">–î–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è</h4>
              <span className="text-sm text-gray-500">({birthdays.length})</span>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
              {birthdays.map((event) => (
                <motion.div
                  key={event.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className={`bg-gradient-to-r ${getEventColor(event.type)} border rounded-xl p-3 hover:shadow-md transition-all max-w-sm`}
                >
                  <div className="flex items-center gap-3">
                    {getEventIcon(event.type)}
                    <div className="flex-1 min-w-0">
                      <h5 className="font-semibold text-gray-800 truncate">
                        {event.recipient || (event as any).relationship || '–ù–µ–≤—ñ–¥–æ–º–æ'}
                      </h5>
                      {(event as any).relationship && (
                        <p className="text-xs text-purple-600 truncate">
                          –í–∞—à—ñ —Å—Ç–æ—Å—É–Ω–∫–∏: {(event as any).relationship}
                        </p>
                      )}
                      <p className="text-sm text-gray-600">
                        {formatDate(event.date)}
                      </p>
                    </div>
                    <button
                      onClick={() => handleCreateGreeting(event)}
                      className="flex-shrink-0 bg-pink-500 text-white px-2 py-1 rounded-md hover:bg-pink-600 transition-colors text-xs"
                      title="–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è"
                    >
                      –°—Ç–≤–æ—Ä–∏—Ç–∏
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        )}

        {/* –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ */}
        {holidays.length > 0 && (
          <div>
            <div className="flex items-center gap-2 mb-4">
              <PartyPopper className="w-5 h-5 text-purple-500" />
              <h4 className="text-lg font-semibold text-gray-700">–°–≤—è—Ç–∞ —Ç–∞ –ø–æ–¥—ñ—ó</h4>
              <span className="text-sm text-gray-500">({holidays.length})</span>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
              {holidays.map((event) => (
                <motion.div
                  key={event.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className={`bg-gradient-to-r ${getEventColor(event.type)} border rounded-xl p-3 hover:shadow-md transition-all max-w-sm`}
                >
                  <div className="flex items-center gap-3">
                    {getEventIcon(event.type)}
                    <div className="flex-1 min-w-0">
                      <h5 className="font-semibold text-gray-800 truncate">
                        {event.title}
                      </h5>
                      <p className="text-sm text-gray-600">
                        {formatDate(event.date)}
                      </p>
                    </div>
                    <button
                      onClick={() => handleCreateGreeting(event)}
                      className="flex-shrink-0 bg-purple-500 text-white px-2 py-1 rounded-md hover:bg-purple-600 transition-colors text-xs"
                      title="–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è"
                    >
                      –°—Ç–≤–æ—Ä–∏—Ç–∏
                    </button>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  )
} 