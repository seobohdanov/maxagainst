import { FormData } from '@/types'

const GEMINI_API_KEY = process.env.NEXT_PUBLIC_GEMINI_API_KEY
const GEMINI_API_URL = process.env.NEXT_PUBLIC_GEMINI_API_URL

export async function generateGreetingText(formData: FormData): Promise<string> {
  if (!GEMINI_API_KEY) {
    console.error('‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π')
    throw new Error('GEMINI_API_KEY –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π')
  }
  if (!GEMINI_API_URL) {
    console.error('‚ùå GEMINI_API_URL –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π')
    throw new Error('GEMINI_API_URL –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π')
  }

  console.log('üîë GEMINI_API_KEY –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π:', GEMINI_API_KEY.substring(0, 10) + '...')
  console.log('üåê GEMINI_API_URL:', GEMINI_API_URL)

  const prompt = createPrompt(formData)
  console.log('üìù Prompt –¥–ª—è Gemini:', prompt.substring(0, 200) + '...')

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
  const makeRequest = async (attempt: number = 1): Promise<string> => {
    const maxAttempts = 3
    const baseDelay = 2000 // 2 —Å–µ–∫—É–Ω–¥—ã

    try {
      return await performGeminiRequest(prompt)
    } catch (error) {
      if (error instanceof Error && error.message.includes('–ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π') && attempt < maxAttempts) {
        const delay = baseDelay * attempt
        console.log(`üîÑ –°–ø—Ä–æ–±–∞ ${attempt} –Ω–µ–≤–¥–∞–ª–∞, —á–µ–∫–∞—é ${delay}ms –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ—é —Å–ø—Ä–æ–±–æ—é...`)
        await new Promise(resolve => setTimeout(resolve, delay))
        return makeRequest(attempt + 1)
      }
      throw error
    }
  }

  return makeRequest()
}

async function performGeminiRequest(prompt: string): Promise<string> {
  
  try {
    const requestBody = {
      contents: [
        {
          parts: [
            {
              text: prompt
            }
          ]
        }
      ],
      generationConfig: {
        temperature: 0.8,
        topK: 40,
        topP: 0.95,
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
        // –∏ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ø–µ—Å–µ–Ω
        maxOutputTokens: 8192,
      },
      safetySettings: [
        {
          category: "HARM_CATEGORY_HARASSMENT",
          threshold: "BLOCK_MEDIUM_AND_ABOVE"
        },
        {
          category: "HARM_CATEGORY_HATE_SPEECH",
          threshold: "BLOCK_MEDIUM_AND_ABOVE"
        },
        {
          category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
          threshold: "BLOCK_MEDIUM_AND_ABOVE"
        },
        {
          category: "HARM_CATEGORY_DANGEROUS_CONTENT",
          threshold: "BLOCK_MEDIUM_AND_ABOVE"
        }
      ]
    }

    console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ Gemini API...')
    console.log('üìã Request body:', JSON.stringify(requestBody, null, 2))

    const response = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody)
    })

    console.log(`üì° –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Gemini API: ${response.status} ${response.statusText}`)
    console.log('üìã Response headers:', Object.fromEntries(response.headers.entries()))

    if (!response.ok) {
      const errorText = await response.text()
      console.error(`‚ùå Gemini API –ø–æ–º–∏–ª–∫–∞: ${response.status} - ${errorText}`)
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
      if (response.status === 429) {
        console.error('üö´ Rate limit –¥–æ—Å—è–≥–Ω—É—Ç–æ –¥–ª—è Gemini API')
        console.error('üí° –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:')
        console.error('   - –ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ —Ö–≤–∏–ª–∏–Ω—É')
        console.error('   - –ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –¥–µ–Ω—å')
        console.error('   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π API –∫–ª—é—á')
        console.error('   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π URL API')
        throw new Error('–ó–∞–±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ API. –ó–∞—á–µ–∫–∞–π—Ç–µ —Ç—Ä–æ—Ö–∏ —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.')
      } else if (response.status === 503) {
        console.error('üö´ –°–µ—Ä–≤–µ—Ä Gemini –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π')
        console.error('üí° –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:')
        console.error('   - –°–µ—Ä–≤–µ—Ä Gemini —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π')
        console.error('   - –í–∏—Å–æ–∫–∞ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ')
        console.error('   - –¢–µ—Ö–Ω—ñ—á–Ω—ñ —Ä–æ–±–æ—Ç–∏')
        throw new Error('–°–µ—Ä–≤–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–∏–º—á–∞—Å–æ–≤–æ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω.')
      } else if (response.status === 500) {
        console.error('üö´ –í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Gemini')
        throw new Error('–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.')
      } else if (response.status === 400) {
        console.error('üö´ –ü–æ–º–∏–ª–∫–∞ –≤ –∑–∞–ø–∏—Ç—ñ –¥–æ Gemini API')
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –≤ –¥–∞–Ω–∏—Ö –∑–∞–ø–∏—Ç—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º—É —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.')
      }
      
      throw new Error(`–ü–æ–º–∏–ª–∫–∞ API: ${response.status} - ${errorText}`)
    }

    const data = await response.json()
    console.log('üìã –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Gemini API:', data)
    
    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Gemini
    let generatedText = ''
    let finishReason = ''
    if (
      data.candidates &&
      Array.isArray(data.candidates) &&
      data.candidates.length > 0 &&
      data.candidates[0]
    ) {
      const candidate = data.candidates[0]
      finishReason = candidate.finishReason || ''
      // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç (2.5): content.parts[0].text
      if (
        candidate.content &&
        candidate.content.parts &&
        Array.isArray(candidate.content.parts) &&
        candidate.content.parts.length > 0 &&
        candidate.content.parts[0] &&
        typeof candidate.content.parts[0].text === 'string'
      ) {
        generatedText = candidate.content.parts[0].text.trim()
      }
      // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç: content.text
      else if (
        candidate.content &&
        typeof candidate.content.text === 'string'
      ) {
        generatedText = candidate.content.text.trim()
      }
      // –ò–Ω–æ–≥–¥–∞ —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä—è–º–æ –≤ candidate.text
      else if (typeof candidate.text === 'string') {
        generatedText = candidate.text.trim()
      }
    }
    if (generatedText) {
      console.log('‚úÖ –¢–µ–∫—Å—Ç –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ, –¥–æ–≤–∂–∏–Ω–∞:', generatedText.length)
      
      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
      const cleanedText = cleanGeneratedText(generatedText)
      console.log('üßπ –¢–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω–æ –≤—ñ–¥ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤, –Ω–æ–≤–∞ –¥–æ–≤–∂–∏–Ω–∞:', cleanedText.length)
      
      return cleanedText
    } else {
      let reasonMsg = ''
      if (finishReason === 'MAX_TOKENS') {
        reasonMsg = '–ú–æ–¥–µ–ª—å –¥–æ—Å—è–≥–ª–∞ –ª—ñ–º—ñ—Ç—É —Ç–æ–∫–µ–Ω—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏ prompt –∞–±–æ –∑–±—ñ–ª—å—à–∏—Ç–∏ maxOutputTokens.'
      } else if (finishReason) {
        reasonMsg = `–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è: ${finishReason}`
      } else {
        reasonMsg = '–ú–æ–¥–µ–ª—å –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–ª–∞ —Ç–µ–∫—Å—Ç. –ú–æ–∂–ª–∏–≤–æ, –ø—Ä–æ–±–ª–µ–º–∞ –∑ prompt –∞–±–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.'
      }
      console.error('‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Gemini API:', data)
      throw new Error('–ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Gemini API: –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —Ç–µ–∫—Å—Ç. ' + reasonMsg)
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É:', error)
    throw error
  }
}

function createPrompt(formData: FormData): string {
  const languageMap: { [key: string]: string } = {
    'uk': '—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'ru': '—Ä–æ—Å—Å–∏–π—Å–∫–∏–º —è–∑—ã–∫–æ–º',
    'en': '–∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'pl': '–ø–æ–ª—å—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'de': '–Ω—ñ–º–µ—Ü—å–∫–æ—é –º–æ–≤–æ—é',
    'cz': '—á–µ—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'ro': '—Ä—É–º—É–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'sk': '—Å–ª–æ–≤–∞—Ü—å–∫–æ—é –º–æ–≤–æ—é',
    'hu': '—É–≥–æ—Ä—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'it': '—ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'fr': '—Ñ—Ä–∞–Ω—Ü—É–∑—å–∫–æ—é –º–æ–≤–æ—é',
    'hr': '—Ö–æ—Ä–≤–∞—Ç—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'pt': '–ø–æ—Ä—Ç—É–≥–∞–ª—å—Å—å–∫–æ—é –º–æ–≤–æ—é',
    'es': '—ñ—Å–ø–∞–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é'
  }

  const moodMap: { [key: string]: string } = {
    'joyful': '—Ä–∞–¥—ñ—Å–Ω–∏–π —Ç–∞ —Å–≤—è—Ç–∫–æ–≤–∏–π',
    'tender': '–Ω—ñ–∂–Ω–∏–π —Ç–∞ —Ç–µ–ø–ª–∏–π',
    'solemn': '—É—Ä–æ—á–∏—Å—Ç–∏–π —Ç–∞ –∑–Ω–∞—á—É—â–∏–π',
    'energetic': '–µ–Ω–µ—Ä–≥—ñ–π–Ω–∏–π —Ç–∞ –¥–∏–Ω–∞–º—ñ—á–Ω–∏–π'
  }

  const relationshipMap: { [key: string]: string } = {
    '–ú–∞–º–∞': '–º–∞—Ç–µ—Ä—ñ',
    '–¢–∞—Ç–æ': '–±–∞—Ç—å–∫—É',
    '–î—Ä—É–∂–∏–Ω–∞': '–¥—Ä—É–∂–∏–Ω—ñ',
    '–ß–æ–ª–æ–≤—ñ–∫': '—á–æ–ª–æ–≤—ñ–∫—É',
    '–°–∏–Ω': '—Å–∏–Ω—É',
    '–î–æ—á–∫–∞': '–¥–æ—á—Ü—ñ',
    '–ë—Ä–∞—Ç': '–±—Ä–∞—Ç—É',
    '–°–µ—Å—Ç—Ä–∞': '—Å–µ—Å—Ç—Ä—ñ',
    '–î—Ä—É–≥': '–¥—Ä—É–≥—É',
    '–ü–æ–¥—Ä—É–≥–∞': '–ø–æ–¥—Ä—É–∑—ñ',
    '–ö–æ–ª–µ–≥–∞': '–∫–æ–ª–µ–∑—ñ'
  }

  // –°–æ–∑–¥–∞–µ–º —Ä—É—Å—Å–∫–∏–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
  const russianMoodMap: { [key: string]: string } = {
    'joyful': '—Ä–∞–¥–æ—Å—Ç–Ω—ã–π –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π',
    'tender': '–Ω–µ–∂–Ω—ã–π –∏ —Ç–µ–ø–ª—ã–π',
    'solemn': '—Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –∑–Ω–∞—á–∏–º—ã–π',
    'energetic': '—ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ –¥–∏–Ω–∞–º–∏—á–Ω—ã–π'
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±—Ä–∞—É–∑–µ—Ä —Ä—É—Å—Å–∫–∏–º (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
  const isRussianBrowser = typeof window !== 'undefined' && 
    (navigator.language?.startsWith('ru') || navigator.languages?.some(lang => lang.startsWith('ru')))

  const russianRelationshipMap: { [key: string]: string } = {
    '–ú–∞–º–∞': '–º–∞–º—ã',
    '–¢–∞—Ç–æ': '–ø–∞–ø—ã',
    '–î—Ä—É–∂–∏–Ω–∞': '–∂–µ–Ω—ã',
    '–ß–æ–ª–æ–≤—ñ–∫': '–º—É–∂–∞',
    '–°–∏–Ω': '—Å—ã–Ω–∞',
    '–î–æ—á–∫–∞': '–¥–æ—á–µ—Ä–∏',
    '–ë—Ä–∞—Ç': '–±—Ä–∞—Ç–∞',
    '–°–µ—Å—Ç—Ä–∞': '—Å–µ—Å—Ç—Ä—ã',
    '–î—Ä—É–≥': '–¥—Ä—É–≥–∞',
    '–ü–æ–¥—Ä—É–≥–∞': '–ø–æ–¥—Ä—É–≥–∏',
    '–ö–æ–ª–µ–≥–∞': '–∫–æ–ª–ª–µ–≥–∏'
  }

  // –ö–∞—Ä—Ç—ã –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
  const genreMap: { [key: string]: { uk: string, ru: string, structure: string, style: string } } = {
    'pop': {
      uk: '–ø–æ–ø',
      ru: '–ø–æ–ø',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'catchy, melodic, with memorable hooks'
    },
    'rock': {
      uk: '—Ä–æ–∫',
      ru: '—Ä–æ–∫',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'powerful, energetic, with strong rhythm'
    },
    'jazz': {
      uk: '–¥–∂–∞–∑',
      ru: '–¥–∂–∞–∑',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'smooth, sophisticated, with complex harmonies'
    },
    'ballad': {
      uk: '–±–∞–ª–∞–¥–∞',
      ru: '–±–∞–ª–ª–∞–¥–∞',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'emotional, slow, with deep lyrics'
    },
    'folk': {
      uk: '—Ñ–æ–ª—å–∫',
      ru: '—Ñ–æ–ª–∫',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'traditional, storytelling, with acoustic feel'
    },
    'country': {
      uk: '–∫–∞–Ω—Ç—Ä—ñ',
      ru: '–∫–∞–Ω—Ç—Ä–∏',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'down-to-earth, narrative, with country themes'
    },
    'electronic': {
      uk: '–µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –º—É–∑–∏–∫–∞',
      ru: '—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –º—É–∑—ã–∫–∞',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'modern, danceable, with synthesizers'
    },
    'reggae': {
      uk: '—Ä–µ–≥–≥—ñ',
      ru: '—Ä–µ–≥–≥–∏',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'relaxed, rhythmic, with positive energy'
    },
    'blues': {
      uk: '–±–ª—é–∑',
      ru: '–±–ª—é–∑',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'soulful, melancholic, with emotional vocals'
    },
    'funk': {
      uk: '—Ñ–∞–Ω–∫',
      ru: '—Ñ–∞–Ω–∫',
      structure: '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]',
      style: 'groovy, rhythmic, with bass lines'
    }
  }

  // –ö–∞—Ä—Ç–∞ —Å—Ç–∏–ª–µ–π –∞—Ä—Ç–∏—Å—Ç–æ–≤
  const artistStyleMap: { [key: string]: { uk: string, ru: string, style: string, voiceType: string } } = {
    // –£–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –∞—Ä—Ç–∏—Å—Ç—ã (—Å–∫–æ—Ä–æ—á–µ–Ω—ñ –¥–æ 180 —Å–∏–º–≤–æ–ª—ñ–≤)
    'okean_elzy': { 
      uk: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Ä–æ–∫ —É —Å—Ç–∏–ª—ñ –û–∫–µ–∞–Ω –ï–ª—å–∑–∏', 
      ru: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–æ–∫ –≤ —Å—Ç–∏–ª–µ –û–∫–µ–∞–Ω –≠–ª—å–∑–∏', 
      style: 'rock, alternative rock, indie rock, warm voice, raspy voice, baritone voice, emotional voice, melodic voice, powerful voice, Ukrainian', 
      voiceType: 'male' 
    },
    'svyatoslav_vakarchuk': { 
      uk: '—Ä–æ–∫ —É —Å—Ç–∏–ª—ñ –°–≤—è—Ç–æ—Å–ª–∞–≤–∞ –í–∞–∫–∞—Ä—á—É–∫–∞', 
      ru: '—Ä–æ–∫ –≤ —Å—Ç–∏–ª–µ –°–≤—è—Ç–æ—Å–ª–∞–≤–∞ –í–∞–∫–∞—Ä—á—É–∫–∞', 
      style: 'rock, alternative rock, patriotic rock, warm voice, raspy voice, baritone voice, emotional voice, powerful voice, Ukrainian male vocals', 
      voiceType: 'male' 
    },
    'jamala': { 
      uk: '–µ—Ç–Ω–æ-–ø–æ–ø —É —Å—Ç–∏–ª—ñ –î–∂–∞–º–∞–ª–∏', 
      ru: '—ç—Ç–Ω–æ-–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –î–∂–∞–º–∞–ª—ã', 
      style: 'ethno-pop, world music, jazz influences, soulful voice, emotional female vocals, powerful voice, expressive voice, melismatic voice, Ukrainian', 
      voiceType: 'female' 
    },
    'tina_karol': { 
      uk: '–ø–æ–ø —É —Å—Ç–∏–ª—ñ –¢—ñ–Ω–∏ –ö–∞—Ä–æ–ª—å', 
      ru: '–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –¢–∏–Ω—ã –ö–∞—Ä–æ–ª—å', 
      style: 'pop, dance pop, europop, energetic, bright voice, clear voice, soprano voice, melodic voice, catchy voice, expressive voice, female vocals', 
      voiceType: 'female' 
    },
    'verka_serduchka': { 
      uk: '—î–≤—Ä–æ–¥–µ–Ω—Å —É —Å—Ç–∏–ª—ñ –í–µ—Ä–∫–∏ –°–µ—Ä–¥—é—á–∫–∏', 
      ru: '–µ–≤—Ä–æ–¥–∞–Ω—Å –≤ —Å—Ç–∏–ª–µ –í–µ—Ä–∫–∏ –°–µ—Ä–¥—é—á–∫–∏', 
      style: 'eurodance, fun, theatrical, comedic voice, energetic voice, catchy voice, dance music, Ukrainian', 
      voiceType: 'male' 
    },
    
    // –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–æ–ø-–∞—Ä—Ç–∏—Å—Ç—ã (—Å–∫–æ—Ä–æ—á–µ–Ω—ñ)
    'taylor_swift': { 
      uk: '–ø–æ–ø —É —Å—Ç–∏–ª—ñ –¢–µ–π–ª–æ—Ä –°–≤—ñ—Ñ—Ç', 
      ru: '–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –¢–µ–π–ª–æ—Ä –°–≤–∏—Ñ—Ç', 
      style: 'pop, alternative folk, emotional, female vocals, storytelling voice, melodic voice, expressive voice, clear voice', 
      voiceType: 'female' 
    },
    'ed_sheeran': { 
      uk: '—Ñ–æ–ª–∫-–ø–æ–ø —É —Å—Ç–∏–ª—ñ –ï–¥–∞ –®–∏—Ä–∞–Ω–∞', 
      ru: '—Ñ–æ–ª–∫-–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –≠–¥–∞ –®–∏—Ä–∞–Ω–∞', 
      style: 'folk-pop, acoustic guitar loops, male vocals, warm voice, melodic voice, storytelling voice, soft voice', 
      voiceType: 'male' 
    },
    'adele': { 
      uk: '—Å–æ—É–ª —É —Å—Ç–∏–ª—ñ –ê–¥–µ–ª—å', 
      ru: '—Å–æ—É–ª –≤ —Å—Ç–∏–ª–µ –ê–¥–µ–ª—å', 
      style: 'soul, pop ballads, powerful female vocals, emotional voice, rich voice, expressive voice, melismatic voice', 
      voiceType: 'female' 
    },
    'billie_eilish': { 
      uk: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –ø–æ–ø —É —Å—Ç–∏–ª—ñ –ë—ñ–ª–ª—ñ –ê–π–ª—ñ—à', 
      ru: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–ø –≤ —Å—Ç–∏–ª–µ –ë–∏–ª–ª–∏ –ê–π–ª–∏—à', 
      style: 'alternative pop, dark pop, whisper vocals, female vocals, breathy voice, intimate voice, unique voice', 
      voiceType: 'female' 
    },
    'ariana_grande': { 
      uk: '–ø–æ–ø —É —Å—Ç–∏–ª—ñ –ê—Ä—ñ–∞–Ω–∏ –ì—Ä–∞–Ω–¥–µ', 
      ru: '–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –ê—Ä–∏–∞–Ω—ã –ì—Ä–∞–Ω–¥–µ', 
      style: 'pop, R&B, powerful female vocals, soprano voice, melismatic voice, expressive voice, clear voice', 
      voiceType: 'female' 
    },
    'justin_bieber': { 
      uk: '–ø–æ–ø —É —Å—Ç–∏–ª—ñ –î–∂–∞—Å—Ç—ñ–Ω–∞ –ë—ñ–±–µ—Ä–∞', 
      ru: '–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –î–∂–∞—Å—Ç–∏–Ω–∞ –ë–∏–±–µ—Ä–∞', 
      style: 'pop, R&B, male vocals, smooth voice, melodic voice, contemporary voice, expressive voice', 
      voiceType: 'male' 
    },
    'bruno_mars': { 
      uk: '—Ñ–∞–Ω–∫-–ø–æ–ø —É —Å—Ç–∏–ª—ñ –ë—Ä—É–Ω–æ –ú–∞—Ä—Å–∞', 
      ru: '—Ñ–∞–Ω–∫-–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –ë—Ä—É–Ω–æ –ú–∞—Ä—Å–∞', 
      style: 'pop, funk, soul, male vocals, smooth voice, energetic voice, versatile voice, charismatic voice', 
      voiceType: 'male' 
    },
    'dua_lipa': { 
      uk: '–¥–∏—Å–∫–æ-–ø–æ–ø —É —Å—Ç–∏–ª—ñ –î—É–∞ –õ—ñ–ø–∏', 
      ru: '–¥–∏—Å–∫–æ-–ø–æ–ø –≤ —Å—Ç–∏–ª–µ –î—É–∞ –õ–∏–ø—ã', 
      style: 'dance-pop, disco-pop, female vocals, clear voice, melodic voice, catchy voice, modern voice', 
      voiceType: 'female' 
    },
    
    // –†–æ–∫ –∞—Ä—Ç–∏—Å—Ç—ã (—Å–∫–æ—Ä–æ—á–µ–Ω—ñ)
    'coldplay': { 
      uk: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Ä–æ–∫ —É —Å—Ç–∏–ª—ñ Coldplay', 
      ru: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–æ–∫ –≤ —Å—Ç–∏–ª–µ Coldplay', 
      style: 'alternative rock, pop rock, atmospheric, male vocals, emotional voice, melodic voice, anthemic voice', 
      voiceType: 'male' 
    },
    'imagine_dragons': { 
      uk: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Ä–æ–∫ —É —Å—Ç–∏–ª—ñ Imagine Dragons', 
      ru: '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–æ–∫ –≤ —Å—Ç–∏–ª–µ Imagine Dragons', 
      style: 'alternative rock, pop rock, energetic, male vocals, powerful voice, dynamic voice, modern rock', 
      voiceType: 'male' 
    },
    'queen': { 
      uk: '—Ä–æ–∫ —É —Å—Ç–∏–ª—ñ Queen', 
      ru: '—Ä–æ–∫ –≤ —Å—Ç–∏–ª–µ Queen', 
      style: 'rock, operatic rock, theatrical, male vocals, powerful voice, dramatic voice, iconic voice', 
      voiceType: 'male' 
    },
    'the_beatles': { 
      uk: '—Ä–æ–∫ —É —Å—Ç–∏–ª—ñ The Beatles', 
      ru: '—Ä–æ–∫ –≤ —Å—Ç–∏–ª–µ The Beatles', 
      style: 'rock, pop rock, classic rock, male vocals, harmonious voices, melodic voice, timeless voice', 
      voiceType: 'male' 
    },
    
    // R&B/Soul –∞—Ä—Ç–∏—Å—Ç—ã (—Å–∫–æ—Ä–æ—á–µ–Ω—ñ)
    'beyonce': { 
      uk: 'R&B —É —Å—Ç–∏–ª—ñ –ë–µ–π–æ–Ω—Å–µ', 
      ru: 'R&B –≤ —Å—Ç–∏–ª–µ –ë–µ–π–æ–Ω—Å–µ', 
      style: 'R&B, pop, soul, powerful female vocals, melismatic voice, expressive voice, dynamic voice', 
      voiceType: 'female' 
    },
    'john_legend': { 
      uk: '—Å–æ—É–ª —É —Å—Ç–∏–ª—ñ –î–∂–æ–Ω–∞ –õ–µ–¥–∂–µ–Ω—Ç–∞', 
      ru: '—Å–æ—É–ª –≤ —Å—Ç–∏–ª–µ –î–∂–æ–Ω–∞ –õ–µ–¥–∂–µ–Ω–¥–∞', 
      style: 'R&B, soul, piano ballads, male vocals, smooth voice, emotional voice, soulful voice', 
      voiceType: 'male' 
    },
    'alicia_keys': { 
      uk: '—Å–æ—É–ª —É —Å—Ç–∏–ª—ñ –ê–ª—ñ—Å—ñ—ó –ö—ñ–∑', 
      ru: '—Å–æ—É–ª –≤ —Å—Ç–∏–ª–µ –ê–ª–∏—Å–∏–∏ –ö–∏–∑', 
      style: 'R&B, soul, neo-soul, female vocals, powerful voice, soulful voice, piano-driven', 
      voiceType: 'female' 
    },
    
    // Classic/Jazz –∞—Ä—Ç–∏—Å—Ç—ã (—Å–∫–æ—Ä–æ—á–µ–Ω—ñ)
    'frank_sinatra': { 
      uk: '–¥–∂–∞–∑ —É —Å—Ç–∏–ª—ñ –§—Ä–µ–Ω–∫–∞ –°—ñ–Ω–∞—Ç—Ä–∏', 
      ru: '–¥–∂–∞–∑ –≤ —Å—Ç–∏–ª–µ –§—Ä—ç–Ω–∫–∞ –°–∏–Ω–∞—Ç—Ä—ã', 
      style: 'jazz, traditional pop, swing, male vocals, smooth voice, crooner voice, classic voice', 
      voiceType: 'male' 
    },
    'ella_fitzgerald': { 
      uk: '–¥–∂–∞–∑ —É —Å—Ç–∏–ª—ñ –ï–ª–ª–∏ –§—ñ—Ü–¥–∂–µ—Ä–∞–ª—å–¥', 
      ru: '–¥–∂–∞–∑ –≤ —Å—Ç–∏–ª–µ –≠–ª–ª—ã –§–∏—Ü–¥–∂–µ—Ä–∞–ª—å–¥', 
      style: 'jazz, swing, scat singing, female vocals, versatile voice, smooth voice, improvisational', 
      voiceType: 'female' 
    },
    'nat_king_cole': { 
      uk: '–¥–∂–∞–∑ —É —Å—Ç–∏–ª—ñ –ù–µ—Ç–∞ –ö—ñ–Ω–≥–∞ –ö–æ—É–ª–∞', 
      ru: '–¥–∂–∞–∑ –≤ —Å—Ç–∏–ª–µ –ù—ç—Ç–∞ –ö–∏–Ω–≥–∞ –ö–æ—É–ª–∞', 
      style: 'jazz, traditional pop, smooth, male vocals, warm voice, intimate voice, classic voice', 
      voiceType: 'male' 
    }
  }

  // –ö–∞—Ä—Ç–∞ —Ç–∏–ø–æ–≤ –≥–æ–ª–æ—Å–∞
  const voiceTypeMap: { [key: string]: { uk: string, ru: string, instruction: string } } = {
    'female': { 
      uk: '–∂—ñ–Ω–æ—á–∏–π –≥–æ–ª–æ—Å', 
      ru: '–∂–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å',
      instruction: '[Female Vocal]'
    },
    'male': { 
      uk: '—á–æ–ª–æ–≤—ñ—á–∏–π –≥–æ–ª–æ—Å', 
      ru: '–º—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å',
      instruction: '[Male Vocal]'
    },
    'duet': { 
      uk: '–¥—É—ç—Ç (—á–æ–ª–æ–≤—ñ–∫ + –∂—ñ–Ω–∫–∞)', 
      ru: '–¥—É—ç—Ç (–º—É–∂—á–∏–Ω–∞ + –∂–µ–Ω—â–∏–Ω–∞)',
      instruction: '[Duet]\n[Male Vocal]: ... \n[Female Vocal]: ...'
    }
  }

  // –ö–∞—Ä—Ç–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
  const genreMusicalTags: { [key: string]: string[] } = {
    'pop': ['[Catchy Hook]', '[Piano Solo]'],
    'rock': ['[Guitar Solo]', '[Catchy Hook]'],
    'jazz': ['[Piano Solo]', '[Guitar Solo]'],
    'ballad': ['[Piano Solo]', '[Whisper]'],
    'folk': ['[Guitar Solo]', '[Spoken Word]'],
    'country': ['[Guitar Solo]', '[Spoken Word]'],
    'electronic': ['[Catchy Hook]'],
    'reggae': ['[Guitar Solo]'],
    'blues': ['[Guitar Solo]', '[Piano Solo]'],
    'funk': ['[Guitar Solo]', '[Catchy Hook]']
  }

  // –ö–∞—Ä—Ç–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤ –¥–ª—è —Å—Ç–∏–ª–µ–π –∞—Ä—Ç–∏—Å—Ç–æ–≤
  const artistMusicalTags: { [key: string]: string[] } = {
    'okean_elzy': ['[Guitar Solo]', '[Choir]'],
    'svyatoslav_vakarchuk': ['[Guitar Solo]', '[Choir]'],
    'jamala': ['[Piano Solo]', '[Choir]'],
    'tina_karol': ['[Catchy Hook]', '[Piano Solo]'],
    'verka_serduchka': ['[Catchy Hook]'],
    'taylor_swift': ['[Guitar Solo]', '[Piano Solo]'],
    'ed_sheeran': ['[Guitar Solo]'],
    'adele': ['[Piano Solo]', '[Whisper]'],
    'billie_eilish': ['[Whisper]'],
    'bruno_mars': ['[Catchy Hook]', '[Guitar Solo]'],
    'dua_lipa': ['[Catchy Hook]'],
    'coldplay': ['[Piano Solo]', '[Guitar Solo]'],
    'imagine_dragons': ['[Guitar Solo]', '[Choir]'],
    'queen': ['[Piano Solo]', '[Guitar Solo]', '[Choir]'],
    'the_beatles': ['[Guitar Solo]', '[Piano Solo]'],
    'beyonce': ['[Catchy Hook]', '[Choir]'],
    'john_legend': ['[Piano Solo]'],
    'alicia_keys': ['[Piano Solo]'],
    'frank_sinatra': ['[Piano Solo]', '[Spoken Word]'],
    'ella_fitzgerald': ['[Piano Solo]'],
    'nat_king_cole': ['[Piano Solo]']
  }

  // –í—ã–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
  const isRussian = formData.greetingLanguage === 'ru' && isRussianBrowser
  const currentMoodMap = isRussian ? russianMoodMap : moodMap
  const currentRelationshipMap = isRussian ? russianRelationshipMap : relationshipMap
  
  const language = isRussian ? '—Ä–æ—Å—Å–∏–π—Å–∫–∏–º —è–∑—ã–∫–æ–º' : (languageMap[formData.greetingLanguage] || '—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é')
  
  const mood = currentMoodMap[formData.mood] || (isRussian ? '—Ç–µ–ø–ª—ã–π' : '—Ç–µ–ø–ª–∏–π')
  const relationship = currentRelationshipMap[formData.relationship] || formData.relationship.toLowerCase()

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –º—É–∑—ã–∫–∏
  let genreName: string
  let genreStyle: string
  let musicStyleForSuno: string

  if (formData.useStarStyle && formData.artistStyle) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∏–ª—å –∞—Ä—Ç–∏—Å—Ç–∞
    const artistInfo = artistStyleMap[formData.artistStyle]
    if (artistInfo) {
      genreName = isRussian ? artistInfo.ru : artistInfo.uk
      genreStyle = artistInfo.style
      musicStyleForSuno = artistInfo.style
    } else {
      // Fallback –µ—Å–ª–∏ –∞—Ä—Ç–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
      genreName = isRussian ? '–ø–æ–ø' : '–ø–æ–ø'
      genreStyle = 'pop, melodic, emotional'
      musicStyleForSuno = 'pop, melodic, emotional'
    }
  } else {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π –∂–∞–Ω—Ä
    const genre = genreMap[formData.musicStyle] || genreMap['pop']
    genreName = isRussian ? genre.ru : genre.uk
    genreStyle = isRussian ? 
      (genre.style === 'catchy, melodic, with memorable hooks' ? '–∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–π—Å—è, –º–µ–ª–æ–¥–∏—á–Ω—ã–π, —Å —è—Ä–∫–∏–º–∏ –ø—Ä–∏–ø–µ–≤–∞–º–∏' :
       genre.style === 'powerful, energetic, with strong rhythm' ? '–º–æ—â–Ω—ã–π, —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, —Å —Å–∏–ª—å–Ω—ã–º —Ä–∏—Ç–º–æ–º' :
       genre.style === 'smooth, sophisticated, with complex harmonies' ? '–ø–ª–∞–≤–Ω—ã–π, —É—Ç–æ–Ω—á–µ–Ω–Ω—ã–π, —Å–æ —Å–ª–æ–∂–Ω—ã–º–∏ –≥–∞—Ä–º–æ–Ω–∏—è–º–∏' :
       genre.style === 'emotional, slow, with deep lyrics' ? '—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, –º–µ–¥–ª–µ–Ω–Ω—ã–π, —Å –≥–ª—É–±–æ–∫–∏–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏' :
       genre.style === 'traditional, storytelling, with acoustic feel' ? '—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π, –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π, —Å –∞–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–º –∑–≤—É—á–∞–Ω–∏–µ–º' :
       genre.style === 'down-to-earth, narrative, with country themes' ? '–ø—Ä–æ—Å—Ç–æ–¥—É—à–Ω—ã–π, –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π, —Å –∫–∞–Ω—Ç—Ä–∏-—Ç–µ–º–∞—Ç–∏–∫–æ–π' :
       genre.style) :
      (genre.style === 'catchy, melodic, with memorable hooks' ? '–∑–∞–ø–∞–º\'—è—Ç–æ–≤—É–≤–∞–Ω–∏–π, –º–µ–ª–æ–¥—ñ–π–Ω–∏–π, –∑ —è—Å–∫—Ä–∞–≤–∏–º–∏ –ø—Ä–∏—Å–ø—ñ–≤–∞–º–∏' :
       genre.style === 'powerful, energetic, with strong rhythm' ? '–ø–æ—Ç—É–∂–Ω–∏–π, –µ–Ω–µ—Ä–≥—ñ–π–Ω–∏–π, –∑ —Å–∏–ª—å–Ω–∏–º —Ä–∏—Ç–º–æ–º' :
       genre.style === 'smooth, sophisticated, with complex harmonies' ? '–ø–ª–∞–≤–Ω–∏–π, –≤–∏—Ç–æ–Ω—á–µ–Ω–∏–π, –∑—ñ —Å–∫–ª–∞–¥–Ω–∏–º–∏ –≥–∞—Ä–º–æ–Ω—ñ—è–º–∏' :
       genre.style === 'emotional, slow, with deep lyrics' ? '–µ–º–æ—Ü—ñ–π–Ω–∏–π, –ø–æ–≤—ñ–ª—å–Ω–∏–π, –∑ –≥–ª–∏–±–æ–∫–∏–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏' :
       genre.style === 'traditional, storytelling, with acoustic feel' ? '—Ç—Ä–∞–¥–∏—Ü—ñ–π–Ω–∏–π, –æ–ø–æ–≤—ñ–¥–Ω–∏–π, –∑ –∞–∫—É—Å—Ç–∏—á–Ω–∏–º –∑–≤—É—á–∞–Ω–Ω—è–º' :
       genre.style === 'down-to-earth, narrative, with country themes' ? '–ø—Ä–æ—Å—Ç–æ–¥—É—à–Ω–∏–π, –æ–ø–æ–≤—ñ–¥–Ω–∏–π, –∑ –∫–∞–Ω—Ç—Ä—ñ-—Ç–µ–º–∞—Ç–∏–∫–æ—é' :
       genre.style)
    musicStyleForSuno = genre.style
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –≥–æ–ª–æ—Å–∞
  const voiceInfo = voiceTypeMap[formData.voiceType || 'female']
  const voiceType = isRussian ? voiceInfo.ru : voiceInfo.uk

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–µ –∫ —Å—Ç–∏–ª—é –¥–ª—è Suno
  let voiceInstruction = ''
  if (formData.voiceType === 'female') {
    musicStyleForSuno += ', female vocals'
    voiceInstruction = '[Female Vocal]'
  } else if (formData.voiceType === 'male') {
    musicStyleForSuno += ', male vocals'
    voiceInstruction = '[Male Vocal]'
  } else if (formData.voiceType === 'duet') {
    musicStyleForSuno += ', duet, male and female vocals'
    voiceInstruction = '[Duet]'
  }

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–ª–∏–Ω—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π
  const personalDetailsLength = formData.personalDetails ? formData.personalDetails.length : 0
  const hasDetailedContext = personalDetailsLength > 100
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Å–Ω–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  let songStructure = '[verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]'
  let verseLines = 4
  let chorusLines = 4
  let bridgeLines = 4
  
  if (hasDetailedContext) {
    // –î–ª—è –±–æ–≥–∞—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–µ–ª–∞–µ–º –ø–µ—Å–Ω—é –¥–ª–∏–Ω–Ω–µ–µ
    songStructure = '[verse] - [chorus] - [verse] - [chorus] - [verse] - [chorus] - [bridge] - [chorus]'
    verseLines = 6
    chorusLines = 4
    bridgeLines = 6
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–≥–∏
  let additionalTags: string[] = []
  if (formData.useStarStyle && formData.artistStyle) {
    additionalTags = artistMusicalTags[formData.artistStyle] || []
  } else {
    additionalTags = genreMusicalTags[formData.musicStyle] || []
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª—å –¥–ª—è Suno –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –ø–æ–ª–µ
  (formData as any).sunoStyle = musicStyleForSuno

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
  if (isRussian) {
    return `
–°–æ–∑–¥–∞–π —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏-–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ ${genreName} ${language} –¥–ª—è ${relationship} –Ω–∞ ${formData.occasion.toLowerCase()}.

–î–ï–¢–ê–õ–ò –ó–ê–ö–ê–ó–ê:
- –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ${formData.recipientName}
- –ü–æ–≤–æ–¥: ${formData.occasion}
- –û—Ç–Ω–æ—à–µ–Ω–∏—è: ${formData.relationship}
- –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${mood}
- –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å: ${genreName} (${genreStyle})
- –¢–∏–ø –≥–æ–ª–æ—Å–∞: ${voiceType}
${formData.personalDetails ? `- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏: ${formData.personalDetails}` : '- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏: –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –§–û–†–ú–ê–¢–£:
1. –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Å–Ω–∏: ${songStructure}
2. –†–∞–∑–º–µ—Ä—ã —á–∞—Å—Ç–µ–π: –∫—É–ø–ª–µ—Ç—ã –ø–æ ${verseLines} —Å—Ç—Ä–æ–∫–∏, –ø—Ä–∏–ø–µ–≤ –ø–æ ${chorusLines} —Å—Ç—Ä–æ–∫–∏, –±—Ä–∏–¥–∂ –ø–æ ${bridgeLines} —Å—Ç—Ä–æ–∫
3. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∏—Ñ–º–æ–≤–∞–Ω–Ω—ã–º –∏ –º–µ–ª–æ–¥–∏—á–Ω—ã–º –≤ —Å—Ç–∏–ª–µ ${genreName}
4. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è "${formData.recipientName}" –∏ –ø–æ–≤–æ–¥ "${formData.occasion}"
${formData.personalDetails ? `5. –ò–°–ü–û–õ–¨–ó–£–ô –í–°–ï –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –î–ï–¢–ê–õ–ò –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞` : '5. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ —Ç–µ–º—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–≤–æ–¥–∞ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π'}
6. –°—Ç–∏–ª—å: ${mood}, ${genreStyle}
7. –¢–∏–ø –≥–æ–ª–æ—Å–∞: ${voiceType}${formData.voiceType === 'duet' ? ' - —Å–æ–∑–¥–∞–π –¥–∏–∞–ª–æ–≥ –º–µ–∂–¥—É –º—É–∂—á–∏–Ω–æ–π –∏ –∂–µ–Ω—â–∏–Ω–æ–π' : ''}
${hasDetailedContext ? `8. –£—á–∏—Ç—ã–≤–∞—è –±–æ–≥–∞—Ç—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, —Å–æ–∑–¥–∞–π –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç` : '8. –°–æ–∑–¥–∞–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π, –Ω–æ —Ç–µ–ø–ª—ã–π —Ç–µ–∫—Å—Ç'}
${additionalTags.length > 0 ? `9. –ò—Å–ø–æ–ª—å–∑—É–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–≥–∏: ${additionalTags.join(', ')} –≤ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ—Å—Ç–∞—Ö` : ''}

–°–¢–†–£–ö–¢–£–†–ê –ü–ï–°–ù–ò:
${songStructure}

${formData.voiceType === 'duet' ? `
–í–ê–ñ–ù–û –î–õ–Ø –î–£–≠–¢–ê:
- –ò—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–∞—Ç–µ–≥–∏ [Male Vocal] –∏ [Female Vocal] –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä—Ç–∏–π
- –°–æ–∑–¥–∞–π –¥–∏–∞–ª–æ–≥ –∏–ª–∏ –ø–µ—Ä–µ–∫–ª–∏—á–∫—É –º–µ–∂–¥—É –≥–æ–ª–æ—Å–∞–º–∏
- –í –ø—Ä–∏–ø–µ–≤–µ –≥–æ–ª–æ—Å–∞ –º–æ–≥—É—Ç –∑–≤—É—á–∞—Ç—å –≤–º–µ—Å—Ç–µ [Duet]
` : ''}

${additionalTags.length > 0 ? `
–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–ì–ò:
–ú–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Ç–µ–≥–∏ –¥–ª—è —É–∫—Ä–∞—à–µ–Ω–∏—è –ø–µ—Å–Ω–∏: ${additionalTags.join(', ')}
–ù–∞–ø—Ä–∏–º–µ—Ä: ${additionalTags[0]} –º–µ–∂–¥—É –∫—É–ø–ª–µ—Ç–æ–º –∏ –ø—Ä–∏–ø–µ–≤–æ–º, –∏–ª–∏ ${additionalTags[additionalTags.length - 1]} –≤ –∫–æ–Ω—Ü–µ –ø–µ—Å–Ω–∏.
` : ''}

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –°–æ–∑–¥–∞–π –¢–û–õ–¨–ö–û —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
- –ù–ï –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –ø–æ—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
- –ù–ï –ø–∏—à–∏ "–í–æ—Ç —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏" –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ —Ñ—Ä–∞–∑—ã
- –ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å –º–µ—Ç–∞—Ç–µ–≥–æ–≤ –∏ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Å–Ω–∏
- –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è

–ü–†–ò–ú–ï–† –§–û–†–ú–ê–¢–ê:
${voiceInstruction ? `${voiceInstruction}\n` : ''}[verse]
${'–°—Ç—Ä–æ–∫–∞ –∫—É–ø–ª–µ—Ç–∞\n'.repeat(verseLines).trim()}

[chorus]
${'–°—Ç—Ä–æ–∫–∞ –ø—Ä–∏–ø–µ–≤–∞\n'.repeat(chorusLines).trim()}

${formData.voiceType === 'duet' ? `
[verse]
[Male Vocal]: –°—Ç—Ä–æ–∫–∞ –æ—Ç –º—É–∂—á–∏–Ω—ã
[Female Vocal]: –û—Ç–≤–µ—Ç –æ—Ç –∂–µ–Ω—â–∏–Ω—ã
[Male Vocal]: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –æ—Ç –º—É–∂—á–∏–Ω—ã
[Female Vocal]: –û—Ç–≤–µ—Ç –æ—Ç –∂–µ–Ω—â–∏–Ω—ã

[chorus]
[Duet]: –°—Ç—Ä–æ–∫–∞ –ø—Ä–∏–ø–µ–≤–∞ –≤–º–µ—Å—Ç–µ
[Duet]: –°—Ç—Ä–æ–∫–∞ –ø—Ä–∏–ø–µ–≤–∞ –≤–º–µ—Å—Ç–µ
[Duet]: –°—Ç—Ä–æ–∫–∞ –ø—Ä–∏–ø–µ–≤–∞ –≤–º–µ—Å—Ç–µ
[Duet]: –°—Ç—Ä–æ–∫–∞ –ø—Ä–∏–ø–µ–≤–∞ –≤–º–µ—Å—Ç–µ
` : ''}
    `.trim()
  } else {
    return `
–°—Ç–≤–æ—Ä–∏ —Ç–µ–∫—Å—Ç –ø—ñ—Å–Ω—ñ-–ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –≤ —Å—Ç–∏–ª—ñ ${genreName} ${language} –¥–ª—è ${relationship} –Ω–∞ ${formData.occasion.toLowerCase()}.

–î–ï–¢–ê–õ–Ü –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:
- –Ü–º'—è –æ—Ç—Ä–∏–º—É–≤–∞—á–∞: ${formData.recipientName}
- –ü—Ä–∏–≤—ñ–¥: ${formData.occasion}
- –°—Ç–æ—Å—É–Ω–∫–∏: ${formData.relationship}
- –ù–∞—Å—Ç—Ä—ñ–π: ${mood}
- –ú—É–∑–∏—á–Ω–∏–π —Å—Ç–∏–ª—å: ${genreName} (${genreStyle})
- –¢–∏–ø –≥–æ–ª–æ—Å—É: ${voiceType}
${formData.personalDetails ? `- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–µ—Ç–∞–ª—ñ: ${formData.personalDetails}` : '- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–µ—Ç–∞–ª—ñ: –Ω–µ –≤–∫–∞–∑–∞–Ω–æ'}

–í–ò–ú–û–ì–ò –î–û –§–û–†–ú–ê–¢–£:
1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—ñ—Å–Ω—ñ: ${songStructure}
2. –†–æ–∑–º—ñ—Ä–∏ —á–∞—Å—Ç–∏–Ω: –∫—É–ø–ª–µ—Ç–∏ –ø–æ ${verseLines} —Ä—è–¥–∫–∏, –ø—Ä–∏—Å–ø—ñ–≤ –ø–æ ${chorusLines} —Ä—è–¥–∫–∏, –±—Ä–∏–¥–∂ –ø–æ ${bridgeLines} —Ä—è–¥–∫–∏
3. –¢–µ–∫—Å—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —Ä–∏–º–æ–≤–∞–Ω–∏–º —Ç–∞ –º–µ–ª–æ–¥—ñ–π–Ω–∏–º —É —Å—Ç–∏–ª—ñ ${genreName}
4. –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∫–ª—é—á–∏—Ç–∏ —ñ–º'—è –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ "${formData.recipientName}" —Ç–∞ –ø—Ä–∏–≤—ñ–¥ "${formData.occasion}"
${formData.personalDetails ? `5. –í–ò–ö–û–†–ò–°–¢–û–í–£–ô –í–°–Ü –ü–ï–†–°–û–ù–ê–õ–¨–ù–Ü –î–ï–¢–ê–õ–Ü –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É` : '5. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—ñ —Ç–µ–º–∏ –¥–ª—è –¥–∞–Ω–æ–≥–æ –ø—Ä–∏–≤–æ–¥—É —Ç–∞ —Å—Ç–æ—Å—É–Ω–∫—ñ–≤'}
6. –°—Ç–∏–ª—å: ${mood}, ${genreStyle}
7. –¢–∏–ø –≥–æ–ª–æ—Å—É: ${voiceType}${formData.voiceType === 'duet' ? ' - —Å—Ç–≤–æ—Ä–∏ –¥—ñ–∞–ª–æ–≥ –º—ñ–∂ —á–æ–ª–æ–≤—ñ–∫–æ–º —Ç–∞ –∂—ñ–Ω–∫–æ—é' : ''}
${hasDetailedContext ? `8. –í—Ä–∞—Ö–æ–≤—É—é—á–∏ –±–∞–≥–∞—Ç–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, —Å—Ç–≤–æ—Ä–∏ –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–∏–π —Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç` : '8. –°—Ç–≤–æ—Ä–∏ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π, –∞–ª–µ —Ç–µ–ø–ª–∏–π —Ç–µ–∫—Å—Ç'}
${additionalTags.length > 0 ? `9. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Ç–µ–≥–∏: ${additionalTags.join(', ')} —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö` : ''}

–°–¢–†–£–ö–¢–£–†–ê –ü–Ü–°–ù–Ü:
${songStructure}

${formData.voiceType === 'duet' ? `
–í–ê–ñ–õ–ò–í–û –î–õ–Ø –î–£–ï–¢–£:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ—Ç–∞—Ç–µ–≥–∏ [Male Vocal] —Ç–∞ [Female Vocal] –¥–ª—è –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä—Ç—ñ–π
- –°—Ç–≤–æ—Ä–∏ –¥—ñ–∞–ª–æ–≥ –∞–±–æ –ø–µ—Ä–µ–∫–ª–∏—á–∫—É –º—ñ–∂ –≥–æ–ª–æ—Å–∞–º–∏
- –£ –ø—Ä–∏—Å–ø—ñ–≤—ñ –≥–æ–ª–æ—Å–∏ –º–æ–∂—É—Ç—å –∑–≤—É—á–∞—Ç–∏ —Ä–∞–∑–æ–º [Duet]
` : ''}

${additionalTags.length > 0 ? `
–î–û–î–ê–¢–ö–û–í–Ü –¢–ï–ì–ò:
–ú–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—ñ —Ç–µ–≥–∏ –¥–ª—è –ø—Ä–∏–∫—Ä–∞—Å–∏ –ø—ñ—Å–Ω—ñ: ${additionalTags.join(', ')}
–ù–∞–ø—Ä–∏–∫–ª–∞–¥: ${additionalTags[0]} –º—ñ–∂ –∫—É–ø–ª–µ—Ç–æ–º —Ç–∞ –ø—Ä–∏—Å–ø—ñ–≤–æ–º, –∞–±–æ ${additionalTags[additionalTags.length - 1]} –≤ –∫—ñ–Ω—Ü—ñ –ø—ñ—Å–Ω—ñ.
` : ''}

–ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û:
- –°—Ç–≤–æ—Ä–∏ –õ–ò–®–ï —Ç–µ–∫—Å—Ç –ø—ñ—Å–Ω—ñ —É –≤–∫–∞–∑–∞–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
- –ù–ï –¥–æ–¥–∞–≤–∞–π –∂–æ–¥–Ω–∏—Ö –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤, –ø–æ—è—Å–Ω–µ–Ω—å —á–∏ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
- –ù–ï –ø–∏—à–∏ "–û—Å—å —Ç–µ–∫—Å—Ç –ø—ñ—Å–Ω—ñ" –∞–±–æ –ø–æ–¥—ñ–±–Ω—ñ —Ñ—Ä–∞–∑–∏
- –ü–æ—á–∏–Ω–∞–π –æ–¥—Ä–∞–∑—É –∑ –º–µ—Ç–∞—Ç–µ–≥—ñ–≤ —Ç–∞ —Ç–µ–∫—Å—Ç—É –ø—ñ—Å–Ω—ñ
- –¢–µ–∫—Å—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≥–æ—Ç–æ–≤–∏–π –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è

–ü–†–ò–ö–õ–ê–î –§–û–†–ú–ê–¢–£:
${voiceInstruction ? `${voiceInstruction}\n` : ''}[verse]
${'–†—è–¥–æ–∫ –∫—É–ø–ª–µ—Ç—É\n'.repeat(verseLines).trim()}

[chorus]
${'–†—è–¥–æ–∫ –ø—Ä–∏—Å–ø—ñ–≤—É\n'.repeat(chorusLines).trim()}

${formData.voiceType === 'duet' ? `
[verse]
[Male Vocal]: –†—è–¥–æ–∫ –≤—ñ–¥ —á–æ–ª–æ–≤—ñ–∫–∞
[Female Vocal]: –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∂—ñ–Ω–∫–∏
[Male Vocal]: –ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –≤—ñ–¥ —á–æ–ª–æ–≤—ñ–∫–∞
[Female Vocal]: –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∂—ñ–Ω–∫–∏

[chorus]
[Duet]: –†—è–¥–æ–∫ –ø—Ä–∏—Å–ø—ñ–≤—É —Ä–∞–∑–æ–º
[Duet]: –†—è–¥–æ–∫ –ø—Ä–∏—Å–ø—ñ–≤—É —Ä–∞–∑–æ–º
[Duet]: –†—è–¥–æ–∫ –ø—Ä–∏—Å–ø—ñ–≤—É —Ä–∞–∑–æ–º
[Duet]: –†—è–¥–æ–∫ –ø—Ä–∏—Å–ø—ñ–≤—É —Ä–∞–∑–æ–º
` : ''}
    `.trim()
  }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ Gemini
 */
function cleanGeneratedText(text: string): string {
  if (!text) return text
  
  // –£–¥–∞–ª—è–µ–º –≤–≤–æ–¥–Ω—ã–µ —Ñ—Ä–∞–∑—ã
  const introPatterns = [
    /^.*?[–í–≤]–æ—Ç —Ç–µ–∫—Å—Ç.*?–ø—ñ—Å–Ω—ñ.*?:\s*/,
    /^.*?[–û–æ]—Å—å —Ç–µ–∫—Å—Ç.*?–ø—ñ—Å–Ω—ñ.*?:\s*/,
    /^.*?[–¢—Ç]–µ–∫—Å—Ç –ø—ñ—Å–Ω—ñ.*?:\s*/,
    /^.*?[–ü–ø]—ñ—Å–Ω—è.*?:\s*/,
    /^.*?–≤ —Å—Ç–∏–ª—ñ.*?:\s*/,
    /^.*?—è–∫–∏–π –º—ñ–≥ –±–∏.*?:\s*/,
    /^.*?–¥–ª—è.*?–≥–æ–ª–æ—Å.*?:\s*/
  ]
  
  let cleanedText = text
  for (const pattern of introPatterns) {
    cleanedText = cleanedText.replace(pattern, '')
  }
  
  // –£–¥–∞–ª—è–µ–º –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
  const outroPatterns = [
    /\n\n.*?[–¶—Ü]—è –ø—ñ—Å–Ω—è.*$/,
    /\n\n.*?[–°—Å]–ø–æ–¥—ñ–≤–∞—é—Å—è.*$/,
    /\n\n.*?[–ù–Ω]–∞–¥—ñ—é—Å—è.*$/,
    /\n\n.*?[–î–¥]—É–º–∞—é.*$/
  ]
  
  for (const pattern of outroPatterns) {
    cleanedText = cleanedText.replace(pattern, '')
  }
  
  // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
  cleanedText = cleanedText.trim()
  
  // –£–¥–∞–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
  cleanedText = cleanedText.replace(/\n\n\n+/g, '\n\n')
  
  return cleanedText
} 