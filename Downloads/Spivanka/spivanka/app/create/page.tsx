'use client'

import React, { useState, useEffect } from 'react'
import { useSession } from 'next-auth/react'
import { useRouter } from 'next/navigation'
import { ServicePage } from '@/components/pages/ServicePage'
import ConsentModal from '@/components/modals/ConsentModal'
import { PaymentModal } from '@/components/modals/PaymentModal'
import { useAppSettings } from '@/hooks/useAppSettings'
import { useBrowserLanguage } from '@/hooks/useBrowserLanguage'
import type { FormData, Plan } from '@/types'
import { generationService } from '@/services/generationService'
import { safeToast } from '@/lib/toast'

export default function CreatePage() {
  const { data: session, status } = useSession()
  const router = useRouter()
  const { settings } = useAppSettings()
  const { isRussianBrowser } = useBrowserLanguage()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [currentStep, setCurrentStep] = useState(1)
  const [formData, setFormData] = useState<FormData>({
    recipientName: '',
    occasion: '',
    relationship: '',
    personalDetails: '',
    musicStyle: '',
    mood: '',
    greetingLanguage: isRussianBrowser ? 'ru' : 'uk',
    voiceType: 'female',
    useStarStyle: false,
    artistStyle: '',
    isCustomOccasion: false
  })
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
    const exampleData = localStorage.getItem('exampleData')
    if (exampleData) {
      try {
        const data = JSON.parse(exampleData)
        setFormData(prev => ({
          ...prev,
          occasion: data.occasion || '',
          relationship: data.relationship || '',
          musicStyle: data.musicStyle || '',
          mood: data.mood || '',
          greetingLanguage: data.greetingLanguage || (isRussianBrowser ? 'ru' : 'uk')
        }))
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä–∞
        localStorage.removeItem('exampleData')
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–∏–∫–ª–∞–¥—É:', error)
      }
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    const calendarEventData = localStorage.getItem('calendarEventData')
    if (calendarEventData) {
      try {
        const eventData = JSON.parse(calendarEventData)
        setFormData(prev => ({
          ...prev,
          recipientName: eventData.recipientName || '',
          occasion: eventData.occasion || '',
          relationship: eventData.relationship || '',
          isCustomOccasion: eventData.isCustomOccasion || false
        }))
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        localStorage.removeItem('calendarEventData')
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error)
      }
    }
  }, [isRussianBrowser])
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  const [generatedText, setGeneratedText] = useState('')
  const [isGenerating, setIsGenerating] = useState(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞–Ω–æ–≤
  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
  const [promoCode, setPromoCode] = useState('')
  const [promoDiscount, setPromoDiscount] = useState(0)
  const [promoError, setPromoError] = useState('')
  const [isEditingText, setIsEditingText] = useState(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  const [showConsentModal, setShowConsentModal] = useState(false)
  const [hasConsents, setHasConsents] = useState(false)
  const [showPaymentModal, setShowPaymentModal] = useState(false)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—Å–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    if (session?.user?.email && status === 'authenticated') {
      checkUserConsentsOnLoad(session.user.email)
    }
  }, [session, status])

  const checkUserConsentsOnLoad = async (email: string) => {
    try {
      const response = await fetch('/api/consent/check', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email })
      })

      const data = await response.json()
      
      if (data.success) {
        if (!data.hasConsents) {
          console.log('‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º–∞—î –∑–≥–æ–¥, –ø–æ–∫–∞–∑—É—é –ø–æ–ø–∞–ø –∑–≥–æ–¥')
          setShowConsentModal(true)
          setHasConsents(false)
        } else {
          console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–≥–æ–¥–∏')
          setHasConsents(true)
        }
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–≥–æ–¥:', error)
    }
  }

  const handleConsentModalClose = () => {
    setShowConsentModal(false)
    setHasConsents(true) // <-- –°—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å–æ–≥–ª–∞—Å–∏—è —Ç–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ –µ—Å—Ç—å
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—Å–∏–π –ø–µ—Ä–µ–¥ –ª—é–±—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
  const checkConsentsBeforeAction = async (): Promise<boolean> => {
    if (!session?.user?.email) {
      return false
    }
    if (hasConsents) {
      return true
    }
    try {
      const response = await fetch('/api/consent/check', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email: session.user.email })
      })

      const data = await response.json()
      
      if (data.success && !data.hasConsents) {
        console.log('‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –º–∞—î –∑–≥–æ–¥, –ø–æ–∫–∞–∑—É—é –ø–æ–ø–∞–ø –∑–≥–æ–¥')
        setShowConsentModal(true)
        setHasConsents(false)
        return false
      }
      setHasConsents(true)
      return true
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–≥–æ–¥:', error)
      return false
    }
  }

  const handleBack = () => {
    router.push('/')
  }

  const handleNextStep = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    const hasConsents = await checkConsentsBeforeAction()
    if (!hasConsents) {
      return
    }
    
    console.log(`üîÑ –ü–µ—Ä–µ—Ö—ñ–¥ –∑ –∫—Ä–æ–∫—É ${currentStep} –Ω–∞ –∫—Ä–æ–∫ ${currentStep + 1}`)
    setCurrentStep(prev => prev + 1)
  }

  const handlePrevStep = () => {
    setCurrentStep(prev => prev - 1)
    // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω–∏ –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞–∑–∞–¥
    setIsGenerating(false)
    setPromoError('')
  }

  const handleGenerateText = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
    const hasConsents = await checkConsentsBeforeAction()
    if (!hasConsents) {
      return
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    if (!formData.recipientName || !formData.occasion || !formData.relationship) {
      safeToast.error('–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è')
      return
    }

    setIsGenerating(true)
    console.log('üéµ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É...')

    try {
      const result = await generationService.generateText(formData)

      if (result.success && result.text) {
        setGeneratedText(result.text)
        safeToast.success('–¢–µ–∫—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!')
        console.log('‚úÖ –¢–µ–∫—Å—Ç –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        // –ù–ï –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ –ö—Ä–æ–∫–µ 2 –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        // setCurrentStep(prev => prev + 1)
      } else {
        safeToast.error(result.error || '–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É')
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É:', error)
      safeToast.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É')
    } finally {
      setIsGenerating(false)
    }
  }

  const handleRegenerateText = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–µ—Ä–µ–¥ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
    const hasConsents = await checkConsentsBeforeAction()
    if (!hasConsents) {
      return
    }

    setIsGenerating(true)
    console.log('üîÑ –†–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É...')

    try {
      const result = await generationService.generateText(formData)

      if (result.success && result.text) {
        setGeneratedText(result.text)
        safeToast.success('–ù–æ–≤–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç —Ç–µ–∫—Å—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–æ!')
        console.log('‚úÖ –¢–µ–∫—Å—Ç —Ä–µ–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
      } else {
        safeToast.error(result.error || '–ü–æ–º–∏–ª–∫–∞ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É')
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É:', error)
      safeToast.error('–ü–æ–º–∏–ª–∫–∞ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É')
    } finally {
      setIsGenerating(false)
    }
  }

  const handleApplyPromo = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–º–æ–∫–æ–¥–∞
    const hasConsents = await checkConsentsBeforeAction()
    if (!hasConsents) {
      return
    }

    setPromoError('')
    
    if (!promoCode.trim()) {
      setPromoError('–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥')
      return
    }

    console.log('üé´ –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É...')

    try {
      const response = await fetch('/api/promocodes/validate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ code: promoCode })
      })

      const data = await response.json()

      if (data.success) {
        setPromoDiscount(data.discount || 0)
        setPromoError('')
        safeToast.success('–ü—Ä–æ–º–æ–∫–æ–¥ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!')
        console.log('‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
      } else {
        setPromoDiscount(0)
        setPromoError(data.error || '–ù–µ–≤—ñ—Ä–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥')
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É:', data.error)
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É:', error)
      setPromoError('–ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É')
    }
  }

  const handlePayment = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
    const hasConsents = await checkConsentsBeforeAction()
    if (!hasConsents) {
      return
    }

    if (!selectedPlan) {
      safeToast.error('–û–±–µ—Ä—ñ—Ç—å —Ç–∞—Ä–∏—Ñ')
      return
    }

    console.log('üí≥ –ü–æ–∫–∞–∑—É—é –º–æ–¥–∞–ª–∫—É –æ–ø–ª–∞—Ç–∏...')
    setShowPaymentModal(true)
  }

  const handlePaymentConfirm = async () => {
    try {
      console.log('üí≥ –ü–æ—á–∞—Ç–æ–∫ –ø—Ä–æ—Ü–µ—Å—É –æ–ø–ª–∞—Ç–∏')
      
      // –Ø–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥, –≤—ñ–¥–º—ñ—á–∞—î–º–æ –π–æ–≥–æ —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π
      if (promoCode && promoDiscount > 0) {
        try {
          await fetch('/api/promocodes/use', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
              code: promoCode,
              orderId: `order_${Date.now()}_${Math.random().toString(36).substring(7)}`
            })
          })
          console.log(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${promoCode} –≤—ñ–¥–º—ñ—á–µ–Ω–æ —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π`)
        } catch (error) {
          console.error('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–º—ñ—Ç–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ–≥–æ:', error)
          // –ù–µ –ø–µ—Ä–µ—Ä–∏–≤–∞—î–º–æ –ø—Ä–æ—Ü–µ—Å –æ–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É –∑ –ø—Ä–æ–º–æ–∫–æ–¥–æ–º
        }
      }
      
      // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —è–∫ –æ–ø–ª–∞—á–µ–Ω–æ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º—É –¥–æ–¥–∞—Ç–∫—É —Ç—É—Ç –±—É–¥–µ API –æ–ø–ª–∞—Ç–∏)
      setShowPaymentModal(false)
      safeToast.success('–û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–∞! –ü–æ—á–∏–Ω–∞—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—É–∑–∏–∫–∏...')
      
      // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –º—É–∑–∏–∫–∏
      console.log('üéµ –ü–æ—á–∞—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –º—É–∑–∏–∫–∏')
      setIsGenerating(true)

      const result = await generationService.generateMusic(generatedText, formData)

      if (result.success && result.taskId) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º taskId –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
        const finalTaskId = result.taskId
        console.log('‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –º—É–∑–∏–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ:', finalTaskId)
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è, –¥–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è
        console.log('üéµ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –º—É–∑–∏–∫–∏ –∑–∞–ø—É—â–µ–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è')
        router.push(`/greeting/${finalTaskId}`)
        
      } else {
        safeToast.error(result.error || '–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –º—É–∑–∏–∫–∏')
        setIsGenerating(false)
      }
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–ø–ª–∞—Ç–∏:', error)
      safeToast.error('–ü–æ–º–∏–ª–∫–∞ –æ–ø–ª–∞—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.')
      setIsGenerating(false)
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏
  if (status === 'loading') {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-900 via-pink-600 to-indigo-800">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4"></div>
          <p className="text-white">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
        </div>
      </div>
    )
  }

  return (
    <>
      <ServicePage
        session={session}
        currentStep={currentStep}
        formData={formData}
        setFormData={setFormData}
        generatedText={generatedText}
        setGeneratedText={setGeneratedText}
        isGenerating={isGenerating}
        selectedPlan={selectedPlan}
        setSelectedPlan={setSelectedPlan}
        promoCode={promoCode}
        setPromoCode={setPromoCode}
        promoDiscount={promoDiscount}
        promoError={promoError}
        isEditingText={isEditingText}
        setIsEditingText={setIsEditingText}
        onBack={handleBack}
        onNextStep={handleNextStep}
        onPrevStep={handlePrevStep}
        onGenerateText={handleGenerateText}
        onRegenerateText={handleRegenerateText}
        onApplyPromo={handleApplyPromo}
        onPayment={handlePayment}
      />
      
      {/* Consent Modal */}
      {showConsentModal && (
        <ConsentModal
          isOpen={showConsentModal}
          onClose={handleConsentModalClose}
        />
      )}

      {/* Payment Modal */}
      {showPaymentModal && selectedPlan && (
        <PaymentModal
          isOpen={showPaymentModal}
          onClose={() => setShowPaymentModal(false)}
          onPayment={handlePaymentConfirm}
          plan={selectedPlan}
          promoDiscount={promoDiscount}
        />
      )}
    </>
  )
} 