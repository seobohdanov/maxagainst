import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import clientPromise from '@/lib/mongodb'

interface CalendarEvent {
  id: string
  title: string
  date: string
  type: 'birthday' | 'holiday' | 'custom'
  recipient?: string
  relationship?: string
  description?: string
  isCustom?: boolean
}

export async function GET(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.email) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    console.log('üìÖ Calendar API: –ø–æ–ª—É—á–∞—é —Å–æ–±—ã—Ç–∏—è –∏–∑ –∫—ç—à–∞ –¥–ª—è:', session.user.email)

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –∫—ç—à–∞
    const client = await clientPromise
    const db = client.db('spivanka')
    const collection = db.collection('calendar_cache')
    
    const userCache = await collection.findOne({ userEmail: session.user.email })
    
    if (!userCache) {
      console.log('üìÖ Calendar API: –∫—ç—à –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
      const tokensCollection = db.collection('calendar_tokens')
      const calendarTokens = await tokensCollection.findOne({ userEmail: session.user.email })
      
      if (!calendarTokens || !calendarTokens.accessToken) {
        return NextResponse.json({
          success: false,
          message: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Google Calendar.',
          events: { birthdays: [], holidays: [] },
          total: 0,
          needsCalendarAuth: true
        })
      }
      
      return NextResponse.json({
        success: false,
        message: '–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è.',
        events: { birthdays: [], holidays: [] },
        total: 0,
        needsSync: true
      })
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏ –∫—ç—à
    const now = new Date()
    const cacheExpired = now > new Date(userCache.nextSync)
    
    if (cacheExpired) {
      console.log('üìÖ Calendar API: –∫—ç—à —É—Å—Ç–∞—Ä–µ–ª, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—é –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º')
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    const calendarEvents: CalendarEvent[] = userCache.events.map((event: any) => ({
      id: event.id,
      title: event.summary,
      date: event.start?.date || event.start?.dateTime || '',
      type: event.type,
      recipient: event.recipient || '',
      relationship: event.relationship || '',
      description: event.description || '',
      isCustom: false
    }))

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ —Ç–∏–ø–∞–º
    const birthdayEvents = calendarEvents.filter(event => event.type === 'birthday')
    const holidayEvents = calendarEvents.filter(event => event.type === 'holiday')

    console.log(`üìÖ Calendar API: –≤–æ–∑–≤—Ä–∞—â–∞—é ${calendarEvents.length} —Å–æ–±—ã—Ç–∏–π –∏–∑ –∫—ç—à–∞`)
    console.log(`üìÖ Calendar API: –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthdayEvents.length}, –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤: ${holidayEvents.length}`)
    
    // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    birthdayEvents.forEach((event, index) => {
      console.log(`üìÖ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è ${index + 1}: "${event.title}" (${event.date})`)
    })
    holidayEvents.forEach((event, index) => {
      console.log(`üìÖ –ü—Ä–∞–∑–¥–Ω–∏–∫ ${index + 1}: "${event.title}" (${event.date})`)
    })

    return NextResponse.json({
      success: true,
      events: {
        birthdays: birthdayEvents,
        holidays: holidayEvents
      },
      total: calendarEvents.length,
      lastSync: userCache.lastSync,
      nextSync: userCache.nextSync,
      expired: cacheExpired
    })

  } catch (error) {
    console.error('‚ùå Calendar API error:', error)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    const testEvents = {
      birthdays: [
        {
          id: 'test-1',
          title: '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ú–∞–∫—Å–∞',
          date: '2025-04-04',
          type: 'birthday' as const,
          recipient: '–ú–∞–∫—Å',
          relationship: '',
          description: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ',
          isCustom: false
        }
      ],
      holidays: [
        {
          id: 'test-2',
          title: '–ù–æ–≤—ã–π –≥–æ–¥',
          date: '2025-01-01',
          type: 'holiday' as const,
          recipient: '',
          relationship: '',
          description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫',
          isCustom: false
        }
      ]
    }

    return NextResponse.json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π',
      events: testEvents,
      total: 2,
      isDemo: true
    })
  }
} 