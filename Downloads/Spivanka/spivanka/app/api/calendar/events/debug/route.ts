import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { google } from 'googleapis'

export async function GET(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.email) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const { MongoClient } = require('mongodb')
    const client = new MongoClient(process.env.MONGODB_URI!)
    await client.connect()
    const db = client.db('spivanka')
    const tokensCollection = db.collection('calendar_tokens')
    
    const calendarTokens = await tokensCollection.findOne({ userEmail: session.user.email })
    
    console.log('üîê Debug: –ø—Ä–æ–≤–µ—Ä—è—é —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è', {
      hasCalendarTokens: !!calendarTokens,
      hasAccessToken: !!(calendarTokens?.accessToken),
      hasRefreshToken: !!(calendarTokens?.refreshToken),
      userEmail: session.user.email
    })
    
    if (!calendarTokens?.accessToken) {
      return NextResponse.json({ 
        error: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Google Calendar.',
        needsCalendarAuth: true 
      }, { status: 401 })
    }

    const accessToken = calendarTokens.accessToken
    const refreshToken = calendarTokens.refreshToken

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Calendar API
    const auth = new google.auth.OAuth2(
      process.env.GOOGLE_CLIENT_ID,
      process.env.GOOGLE_CLIENT_SECRET
    )
    
    auth.setCredentials({
      access_token: accessToken,
      refresh_token: refreshToken
    })
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    auth.on('tokens', async (tokens) => {
      console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ debug')
      if (tokens.access_token && session?.user?.email) {
        await tokensCollection.updateOne(
          { userEmail: session.user.email },
          {
            $set: {
              accessToken: tokens.access_token,
              expiresAt: tokens.expiry_date ? new Date(tokens.expiry_date) : null,
              updatedAt: new Date()
            }
          }
        )
        console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
      }
    })

    const calendar = google.calendar({ version: 'v3', auth })

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
    const timeMin = new Date()
    const timeMax = new Date()
    timeMax.setFullYear(timeMax.getFullYear() + 1) // –ì–æ–¥ –≤–ø–µ—Ä–µ–¥ –æ—Ç —Å–µ–≥–æ–¥–Ω—è

    console.log('üìÖ Debug: –∑–∞–ø—Ä–∞—à–∏–≤–∞—é —Å–æ–±—ã—Ç–∏—è', {
      timeMin: timeMin.toISOString(),
      timeMax: timeMax.toISOString()
    })

    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
    const calendarsResponse = await calendar.calendarList.list()
    const calendars = calendarsResponse.data.items || []
    
    console.log('üìÖ Debug: –Ω–∞–π–¥–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:', calendars.length)
    calendars.forEach((cal: any) => {
      console.log(`üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: ${cal.summary} (${cal.id})`, {
        primary: cal.primary || false,
        accessRole: cal.accessRole || '',
        colorId: cal.colorId || '',
        description: cal.description || ''
      })
    })

    // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    try {
      console.log('üìÖ Debug: –∏—â—É –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...')
      const contactBirthdaysResponse = await calendar.events.list({
        calendarId: '#contacts@group.v.calendar.google.com',
        timeMin: timeMin.toISOString(),
        timeMax: timeMax.toISOString(),
        singleEvents: true,
        orderBy: 'startTime',
        maxResults: 250
      })
      
      const contactEvents = contactBirthdaysResponse.data.items || []
      console.log('üìÖ Debug: –Ω–∞–π–¥–µ–Ω–æ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:', contactEvents.length)
      
      if (contactEvents.length > 0) {
        contactEvents.forEach((event: any) => {
          event.calendarName = '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤'
          event.calendarId = '#contacts@group.v.calendar.google.com'
        })
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
        const contactsCalendar = {
          id: '#contacts@group.v.calendar.google.com',
          summary: '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤',
          primary: false,
          accessRole: 'reader'
        }
        calendars.push(contactsCalendar)
      }
    } catch (error) {
      console.log('üìÖ Debug: –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error)
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
    const allEvents: any[] = []
    
    for (const cal of calendars) {
      try {
        const response = await calendar.events.list({
          calendarId: cal.id || 'primary',
          timeMin: timeMin.toISOString(),
          timeMax: timeMax.toISOString(),
          singleEvents: true,
          orderBy: 'startTime',
          maxResults: 250,
          // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
          fields: 'items(id,summary,description,start,end,location,attendees,created,updated,eventType,colorId,source,creator,organizer,recurrence,status,transparency,visibility)'
        })
        
        const calendarEvents = response.data.items || []
        console.log(`üìÖ Debug: –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è "${cal.summary}" –ø–æ–ª—É—á–µ–Ω–æ ${calendarEvents.length} —Å–æ–±—ã—Ç–∏–π`)
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –∫ –∫–∞–∂–¥–æ–º—É —Å–æ–±—ã—Ç–∏—é
        calendarEvents.forEach((event: any) => {
          event.calendarName = cal.summary
          event.calendarId = cal.id
        })
        
        allEvents.push(...calendarEvents)
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è "${cal.summary}":`, error)
      }
    }

    const events = allEvents
    
    console.log('üìÖ Debug: –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π:', events.length)
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –í–°–ï —Å–æ–±—ã—Ç–∏—è –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const processedEvents = events.map((event: any) => ({
      id: event.id || '',
      summary: event.summary || '',
      description: event.description || '',
      start: event.start,
      end: event.end,
      location: event.location || '',
      attendees: event.attendees || [],
      created: event.created,
      updated: event.updated,
      eventType: event.eventType || '',
      colorId: event.colorId || '',
      source: event.source || {},
      recurrence: event.recurrence || [],
      status: event.status || '',
      transparency: event.transparency || '',
      visibility: event.visibility || '',
      creator: event.creator || {},
      organizer: event.organizer || {},
      calendarName: event.calendarName || '',
      calendarId: event.calendarId || ''
    }))

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π
    const eventAnalysis = {
      totalEvents: processedEvents.length,
      summaryKeywords: {} as Record<string, number>,
      eventTypes: {} as Record<string, number>,
      colorIds: {} as Record<string, number>,
      sources: {} as Record<string, number>,
      calendarSources: {} as Record<string, number>,
      hasRecurrence: processedEvents.filter(e => e.recurrence.length > 0).length,
      hasDescription: processedEvents.filter(e => e.description).length
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö
    processedEvents.forEach(event => {
      if (event.summary) {
        const words = event.summary.toLowerCase().split(/\s+/)
        words.forEach((word: string) => {
          if (word.length > 2) {
            eventAnalysis.summaryKeywords[word] = (eventAnalysis.summaryKeywords[word] || 0) + 1
          }
        })
      }
      
      if (event.eventType) {
        eventAnalysis.eventTypes[event.eventType] = (eventAnalysis.eventTypes[event.eventType] || 0) + 1
      }
      
      if (event.colorId) {
        eventAnalysis.colorIds[event.colorId] = (eventAnalysis.colorIds[event.colorId] || 0) + 1
      }
      
      if (event.source && event.source.title) {
        eventAnalysis.sources[event.source.title] = (eventAnalysis.sources[event.source.title] || 0) + 1
      }
      
      if (event.calendarName) {
        eventAnalysis.calendarSources[event.calendarName] = (eventAnalysis.calendarSources[event.calendarName] || 0) + 1
      }
    })

    console.log('üìä Debug: –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π:', eventAnalysis)

    return NextResponse.json({
      success: true,
      analysis: eventAnalysis,
      events: processedEvents,
      timeRange: {
        from: timeMin.toISOString(),
        to: timeMax.toISOString()
      }
    })

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è (debug):', error)
    
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      stack: error instanceof Error ? error.stack : undefined
    }, { status: 500 })
  }
} 