import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { google } from 'googleapis'

export async function GET(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.email) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const { MongoClient } = require('mongodb')
    const client = new MongoClient(process.env.MONGODB_URI!)
    await client.connect()
    const db = client.db('spivanka')
    const tokensCollection = db.collection('calendar_tokens')
    
    const calendarTokens = await tokensCollection.findOne({ userEmail: session.user.email })
    
    if (!calendarTokens?.accessToken) {
      return NextResponse.json({ 
        error: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Google Calendar.',
        needsCalendarAuth: true 
      }, { status: 401 })
    }

    const accessToken = calendarTokens.accessToken

    console.log('üîç Debug: –Ω–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è:', session.user.email)

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Google Calendar API —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π refresh token
    const auth = new google.auth.OAuth2(
      process.env.GOOGLE_CLIENT_ID,
      process.env.GOOGLE_CLIENT_SECRET
    )
    
    auth.setCredentials({
      access_token: accessToken,
      refresh_token: calendarTokens.refreshToken
    })
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    auth.on('tokens', async (tokens) => {
      console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ cache debug')
      if (tokens.access_token && session?.user?.email) {
        await tokensCollection.updateOne(
          { userEmail: session.user.email },
          {
            $set: {
              accessToken: tokens.access_token,
              expiresAt: tokens.expiry_date ? new Date(tokens.expiry_date) : null,
              updatedAt: new Date()
            }
          }
        )
        console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
      }
    })
    
    const calendar = google.calendar({ version: 'v3', auth })

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
    const timeMin = new Date()
    const timeMax = new Date()
    timeMax.setFullYear(timeMax.getFullYear() + 1)

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
    const calendarsResponse = await calendar.calendarList.list()
    const calendars = calendarsResponse.data.items || []
    
    console.log('üîç Debug: –Ω–∞–π–¥–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:', calendars.length)

    // –ü–æ–ø—Ä–æ–±—É–µ–º —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    let contactBirthdayEvents: any[] = []
    try {
      console.log('üîç Debug: –ø—ã—Ç–∞—é—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...')
      const contactBirthdaysResponse = await calendar.events.list({
        calendarId: '#contacts@group.v.calendar.google.com',
        timeMin: timeMin.toISOString(),
        timeMax: timeMax.toISOString(),
        singleEvents: true,
        orderBy: 'startTime',
        maxResults: 250
      })
      
      contactBirthdayEvents = contactBirthdaysResponse.data.items || []
      console.log('üîç Debug: –Ω–∞–π–¥–µ–Ω–æ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:', contactBirthdayEvents.length)
      
      if (contactBirthdayEvents.length > 0) {
        contactBirthdayEvents.forEach((event: any) => {
          event.calendarName = '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤'
          event.calendarId = '#contacts@group.v.calendar.google.com'
        })
      }
    } catch (error) {
      console.log('üîç Debug: –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error)
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
    const allEvents: any[] = [...contactBirthdayEvents] // –ù–∞—á–∏–Ω–∞–µ–º —Å –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    
    for (const cal of calendars) {
      try {
        const response = await calendar.events.list({
          calendarId: cal.id || 'primary',
          timeMin: timeMin.toISOString(),
          timeMax: timeMax.toISOString(),
          singleEvents: true,
          orderBy: 'startTime',
          maxResults: 250
        })
        
        const events = response.data.items || []
        events.forEach((event: any) => {
          event.calendarName = cal.summary || '–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å'
          event.calendarId = cal.id || 'primary'
        })
        
        allEvents.push(...events)
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ${cal.summary}:`, error)
      }
    }

    console.log('üîç Debug: –≤—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—É—á–µ–Ω–æ:', allEvents.length)

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ
    const analysis = allEvents.map((event: any) => {
      const summary = (event.summary || '').toLowerCase()
      const description = (event.description || '').toLowerCase()
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
      const isBirthday = (
        summary.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') ||
        summary.includes('–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summary.includes('–¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summary.includes('birthday') ||
        summary.includes('–¥—Ä ') ||
        summary.includes('–¥—Ä.') ||
        description.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') ||
        description.includes('–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        description.includes('birthday')
      )
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
      const isHoliday = (
        summary.includes('–¥–µ–Ω—å') ||
        summary.includes('–Ω–æ–≤—ã–π –≥–æ–¥') ||
        summary.includes('–Ω–æ–≤–∏–π —Ä—ñ–∫') ||
        summary.includes('—Ä–æ–∂–¥–µ—Å—Ç–≤–æ') ||
        summary.includes('—Ä—ñ–∑–¥–≤–æ') ||
        summary.includes('–ø–∞—Å—Ö–∞–ª—å–Ω–æ–µ') ||
        summary.includes('—Ç—Ä–æ–∏—Ü–∞') ||
        summary.includes('–ø–µ—Ä–≤–æ–µ –º–∞—è') ||
        summary.includes('–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π') ||
        summary.includes('—Å–≤—è—Ç–æ–≥–æ') ||
        summary.includes('–ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π')
      )
      
      // –ò—Å–∫–ª—é—á–µ–Ω–∏—è
      const isExcluded = (
        summary.includes('–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥–Ω–æ–π') ||
        summary.includes('–ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è') ||
        summary.includes('–∑–∏–º–Ω–µ–µ –≤—Ä–µ–º—è')
      )
      
      const isRelevant = (isBirthday || isHoliday) && !isExcluded
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∏–º—è –¥–ª—è –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è
      let extractedName = ''
      if (isBirthday) {
        const originalSummary = event.summary || ''
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ Google
        if (event.calendarId === '#contacts@group.v.calendar.google.com') {
          // –í –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å–æ–±—ã—Ç–∏—è –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç —Ñ–æ—Ä–º–∞—Ç "–ò–º—è –§–∞–º–∏–ª–∏—è"
          extractedName = originalSummary.trim()
        } else {
          // –ü–∞—Ç—Ç–µ—Ä–Ω 1: "–ò–º—è ‚Äì –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
          let nameMatch = originalSummary.match(/^(.+?)\s*[‚Äì-]\s*/)
          if (nameMatch) {
            extractedName = nameMatch[1].trim()
          }
          
          // –ü–∞—Ç—Ç–µ—Ä–Ω 2: "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ò–º–µ–Ω–∏"
          if (!extractedName) {
            nameMatch = originalSummary.match(/(?:–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è|–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è|birthday)\s+(.+?)$/i)
            if (nameMatch) {
              extractedName = nameMatch[1].trim()
            }
          }
          
          // –ü–∞—Ç—Ç–µ—Ä–Ω 4: –ò–º—è –≤ –Ω–∞—á–∞–ª–µ
          if (!extractedName) {
            const words = originalSummary.split(' ')
            if (words.length >= 2) {
              const restOfTitle = words.slice(1).join(' ').toLowerCase()
              if (restOfTitle.includes('–¥–µ–Ω—å') || restOfTitle.includes('birthday') || restOfTitle.includes('–¥—Ä')) {
                extractedName = words[0].trim()
              }
            }
          }
        }
      }
      
      return {
        id: event.id,
        summary: event.summary,
        description: event.description,
        calendarName: event.calendarName,
        date: event.start?.date || event.start?.dateTime,
        isBirthday,
        isHoliday,
        isExcluded,
        isRelevant,
        extractedName: extractedName || null
      }
    })

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const relevant = analysis.filter(e => e.isRelevant)
    const birthdays = relevant.filter(e => e.isBirthday)
    const holidays = relevant.filter(e => e.isHoliday && !e.isBirthday)
    const birthdaysWithNames = birthdays.filter(e => e.extractedName)
    const birthdaysWithoutNames = birthdays.filter(e => !e.extractedName)
    const contactBirthdays = birthdays.filter(e => e.calendarName === '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤')

    return NextResponse.json({
      success: true,
      summary: {
        totalEvents: allEvents.length,
        contactBirthdayEvents: contactBirthdayEvents.length,
        relevantEvents: relevant.length,
        birthdays: birthdays.length,
        holidays: holidays.length,
        birthdaysWithNames: birthdaysWithNames.length,
        birthdaysWithoutNames: birthdaysWithoutNames.length,
        contactBirthdays: contactBirthdays.length
      },
      details: {
        allBirthdays: birthdays,
        contactBirthdays,
        birthdaysWithNames,
        birthdaysWithoutNames,
        holidays: holidays.slice(0, 10), // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
        allRelevant: relevant
      }
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ debug –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π:', error)
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ debug –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
} 