import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { google } from 'googleapis'
import clientPromise from '@/lib/mongodb'
import { analyzeBatchContacts } from '@/services/contactAnalysisService'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
interface CachedCalendarEvent {
  id: string
  summary: string
  description?: string
  start: any
  end: any
  type: 'birthday' | 'holiday' | 'custom'
  recipient?: string
  relationship?: string
  calendarName: string
  calendarId: string
  lastUpdated: Date
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
interface UserCalendarCache {
  userId: string
  userEmail: string
  events: CachedCalendarEvent[]
  lastSync: Date
  nextSync: Date
}

export async function POST(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.email) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const mongoClient = await clientPromise
    const database = mongoClient.db('spivanka')
    const tokensCollection = database.collection('calendar_tokens')
    
    const calendarTokens = await tokensCollection.findOne({ userEmail: session.user.email })
    
    if (!calendarTokens || !calendarTokens.accessToken) {
      return NextResponse.json({ 
        error: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Google Calendar.',
        needsCalendarAuth: true 
      }, { status: 401 })
    }

    const accessToken = calendarTokens.accessToken

    console.log('üìÖ –ù–∞—á–∏–Ω–∞—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è:', session.user.email)

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Google Calendar API —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π refresh token
    const auth = new google.auth.OAuth2(
      process.env.GOOGLE_CLIENT_ID,
      process.env.GOOGLE_CLIENT_SECRET
    )
    
    auth.setCredentials({
      access_token: accessToken,
      refresh_token: calendarTokens.refreshToken
    })
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    auth.on('tokens', async (tokens) => {
      console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é —Ç–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
      if (tokens.access_token && session?.user?.email) {
        await tokensCollection.updateOne(
          { userEmail: session.user.email },
          {
            $set: {
              accessToken: tokens.access_token,
              expiresAt: tokens.expiry_date ? new Date(tokens.expiry_date) : null,
              updatedAt: new Date()
            }
          }
        )
        console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
      }
    })
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    try {
      console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...')
      await auth.getAccessToken()
      console.log('‚úÖ –¢–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
    } catch (tokenError: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:', tokenError)
      
      if (tokenError.code === 400 && tokenError.message?.includes('invalid_grant')) {
        console.log('üîÑ –¢–æ–∫–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–ª–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
        return NextResponse.json({ 
          error: '–¢–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É—Å—Ç–∞—Ä–µ–ª–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.',
          needsReauth: true 
        }, { status: 401 })
      }
      
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è',
        details: tokenError.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }, { status: 500 })
    }
    
    const calendar = google.calendar({ version: 'v3', auth })

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
    const currentTime = new Date()
    const startOfToday = new Date(currentTime.getFullYear(), currentTime.getMonth(), currentTime.getDate()) // –ù–∞—á–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
    const timeMin = startOfToday.toISOString() // –ù–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞—á–∞–ª–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
    const timeMinDate = startOfToday // –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞—Ç
    
    const timeMaxBirthdays = new Date()
    timeMaxBirthdays.setFullYear(timeMaxBirthdays.getFullYear() + 1) // –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
    
    const timeMaxHolidays = new Date()
    timeMaxHolidays.setMonth(11, 31) // –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞ (31 –¥–µ–∫–∞–±—Ä—è)
    timeMaxHolidays.setHours(23, 59, 59, 999)
    
    console.log('üìÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏:')
    console.log('  - –ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞:', timeMin)
    console.log('  - –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è: –¥–æ', timeMaxBirthdays.toISOString())
    console.log('  - –ü—Ä–∞–∑–¥–Ω–∏–∫–∏: –¥–æ', timeMaxHolidays.toISOString())

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
    let calendarsResponse
    try {
      calendarsResponse = await calendar.calendarList.list()
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:', error)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å —Ç–æ–∫–µ–Ω–∞–º–∏
      if (error.code === 400 && error.message?.includes('invalid_grant')) {
        console.log('üîÑ –¢–æ–∫–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–ª–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
        return NextResponse.json({ 
          error: '–¢–æ–∫–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É—Å—Ç–∞—Ä–µ–ª–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.',
          needsReauth: true 
        }, { status: 401 })
      }
      
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π',
        details: error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }, { status: 500 })
    }
    
    const calendars = calendarsResponse.data.items || []
    console.log('üìÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π:', calendars.length)

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –æ–±—â–µ–º —Ü–∏–∫–ª–µ
    try {
      console.log('üìÖ –î–æ–±–∞–≤–ª—è—é –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫...')
      const contactsCalendar = {
        id: '#contacts@group.v.calendar.google.com',
        summary: '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤',
        primary: false,
        accessRole: 'reader'
      }
      calendars.push(contactsCalendar)
      console.log('üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫')
    } catch (error) {
      console.log('üìÖ –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:', error)
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤—Å–µ—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ä–∞–º–∫–∞–º–∏
    const allEvents: any[] = []
    
    for (const cal of calendars) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω)
        const response = await calendar.events.list({
          calendarId: cal.id || 'primary',
          timeMin: timeMin,
          timeMax: timeMaxBirthdays.toISOString(),
          singleEvents: true,
          orderBy: 'startTime',
          maxResults: 250
        })
        
        const calendarEvents = response.data.items || []
        console.log(`üìÖ –ò–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è "${cal.summary}" –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${calendarEvents.length}`)
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫ –∫–∞–∂–¥–æ–º—É —Å–æ–±—ã—Ç–∏—é
        calendarEvents.forEach((event: any) => {
          event.calendarName = cal.summary || '–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å'
          event.calendarId = cal.id || 'primary'
        })
        
        allEvents.push(...calendarEvents)
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ${cal.summary}:`, error)
      }
    }

    console.log('üìÖ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—É—á–µ–Ω–æ:', allEvents.length)
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è, —É–±–∏—Ä–∞—è –ø—Ä–æ—à–µ–¥—à–∏–µ –¥–∞—Ç—ã
    const currentTimeForFilter = new Date()
    const todayForFilter = new Date(currentTimeForFilter.getFullYear(), currentTimeForFilter.getMonth(), currentTimeForFilter.getDate()) // –¢–æ–ª—å–∫–æ –¥–∞—Ç–∞, –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
    
    console.log('üìÖ –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', todayForFilter.toISOString().split('T')[0])
    
    const filteredEvents = allEvents.filter(event => {
      let eventDate: Date
      
      if (event.start?.date) {
        // –î–ª—è —Å–æ–±—ã—Ç–∏–π –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å
        eventDate = new Date(event.start.date)
      } else if (event.start?.dateTime) {
        // –î–ª—è —Å–æ–±—ã—Ç–∏–π —Å –≤—Ä–µ–º–µ–Ω–µ–º
        eventDate = new Date(event.start.dateTime)
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã, –∏—Å–∫–ª—é—á–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
        return false
      }
      
      // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—ã (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)
      const eventDateOnly = new Date(eventDate.getFullYear(), eventDate.getMonth(), eventDate.getDate())
      const isInFuture = eventDateOnly >= todayForFilter
      
      if (!isInFuture) {
        console.log(`üìÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ—à–µ–¥—à–µ–µ —Å–æ–±—ã—Ç–∏–µ: "${event.summary}" (${eventDateOnly.toISOString().split('T')[0]})`)
      }
      
      return isInFuture
    })
    
    console.log('üìÖ –°–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–∞—Ç:', filteredEvents.length)
    
    // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (filteredEvents.length > 0) {
      console.log('üìã –ü—Ä–∏–º–µ—Ä—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π:')
      filteredEvents.slice(0, 5).forEach((event, index) => {
        const eventDate = event.start?.date ? new Date(event.start.date) : new Date(event.start?.dateTime)
        const eventDateOnly = new Date(eventDate.getFullYear(), eventDate.getMonth(), eventDate.getDate())
        console.log(`  ${index + 1}. "${event.summary}" (${eventDateOnly.toISOString().split('T')[0]}) - ${event.calendarName}`)
      })
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    const filteredOutEvents = allEvents.filter(event => {
      let eventDate: Date
      if (event.start?.date) {
        eventDate = new Date(event.start.date)
      } else if (event.start?.dateTime) {
        eventDate = new Date(event.start.dateTime)
      } else {
        return false
      }
      const eventDateOnly = new Date(eventDate.getFullYear(), eventDate.getMonth(), eventDate.getDate())
      return eventDateOnly < todayForFilter
    })
    
    if (filteredOutEvents.length > 0) {
      console.log('üìÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å–æ–±—ã—Ç–∏–π:', filteredOutEvents.length)
      filteredOutEvents.slice(0, 3).forEach((event, index) => {
        const eventDate = event.start?.date ? new Date(event.start.date) : new Date(event.start?.dateTime)
        const eventDateOnly = new Date(eventDate.getFullYear(), eventDate.getMonth(), eventDate.getDate())
        console.log(`  ${index + 1}. "${event.summary}" (${eventDateOnly.toISOString().split('T')[0]}) - ${event.calendarName}`)
      })
    }

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ ID —Å–æ–±—ã—Ç–∏—è
    const uniqueEvents = filteredEvents.filter((event, index, self) => 
      index === self.findIndex(e => e.id === event.id)
    )
    
    console.log('üìÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏:', uniqueEvents.length)
    if (filteredEvents.length !== uniqueEvents.length) {
      console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏ —É–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:', filteredEvents.length - uniqueEvents.length)
    }

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–º–æ–∫
    const relevantEvents = uniqueEvents.filter((event: any) => {
      const summary = (event.summary || '').toLowerCase()
      const description = (event.description || '').toLowerCase()
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è
      const eventDate = new Date(event.start?.date || event.start?.dateTime || '')
      
      console.log(`üìÖ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–±—ã—Ç–∏–µ: "${event.summary}" (${eventDate.toISOString()})`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
      const isBirthday = (
        summary.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') ||
        summary.includes('–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summary.includes('–¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summary.includes('birthday') ||
        summary.includes('–¥—Ä ') ||
        summary.includes('–¥—Ä.') ||
        description.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') ||
        description.includes('–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        description.includes('birthday') ||
        // –°–æ–±—ã—Ç–∏—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ Google –æ–±—ã—á–Ω–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        event.calendarId === '#contacts@group.v.calendar.google.com'
      )
      
      const isHoliday = (
        summary.includes('–¥–µ–Ω—å') ||
        summary.includes('–Ω–æ–≤—ã–π –≥–æ–¥') ||
        summary.includes('–Ω–æ–≤–∏–π —Ä—ñ–∫') ||
        summary.includes('—Ä–æ–∂–¥–µ—Å—Ç–≤–æ') ||
        summary.includes('—Ä—ñ–∑–¥–≤–æ') ||
        summary.includes('–ø–∞—Å—Ö–∞–ª—å–Ω–æ–µ') ||
        summary.includes('—Ç—Ä–æ–∏—Ü–∞') ||
        summary.includes('–ø–µ—Ä–≤–æ–µ –º–∞—è') ||
        summary.includes('–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π') ||
        summary.includes('—Å–≤—è—Ç–æ–≥–æ') ||
        summary.includes('–ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π')
      ) && !isBirthday // –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
      
      // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
      const isExcluded = (
        summary.includes('–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥–Ω–æ–π') ||
        summary.includes('–ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è') ||
        summary.includes('–∑–∏–º–Ω–µ–µ –≤—Ä–µ–º—è')
      )
      
      if (isExcluded) {
        console.log(`üìÖ –ò—Å–∫–ª—é—á–µ–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ: ${summary}`)
        return false
      }
      
      // –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è - –æ—Ç —Å–µ–≥–æ–¥–Ω—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞
      if (isBirthday) {
        const isWithinBirthdayRange = eventDate >= timeMinDate && eventDate <= timeMaxBirthdays
        console.log(`üìÖ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è "${summary}": ${isWithinBirthdayRange ? '–≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ' : '–≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞'}`)
        if (!isWithinBirthdayRange) {
          console.log(`üìÖ –ò—Å–∫–ª—é—á–µ–Ω –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: ${summary} (${eventDate.toISOString()})`)
        }
        return isWithinBirthdayRange
      }
      
      // –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ - –æ—Ç —Å–µ–≥–æ–¥–Ω—è –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
      if (isHoliday) {
        const isWithinHolidayRange = eventDate >= timeMinDate && eventDate <= timeMaxHolidays
        console.log(`üìÖ –ü—Ä–∞–∑–¥–Ω–∏–∫ "${summary}": ${isWithinHolidayRange ? '–≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ' : '–≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞'}`)
        if (!isWithinHolidayRange) {
          console.log(`üìÖ –ò—Å–∫–ª—é—á–µ–Ω –ø—Ä–∞–∑–¥–Ω–∏–∫ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: ${summary} (${eventDate.toISOString()})`)
        }
        return isWithinHolidayRange
      }
      
      console.log(`üìÖ –°–æ–±—ã—Ç–∏–µ "${summary}" –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏`)
      return false
    })

    console.log('üìÖ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π:', relevantEvents.length)

    // –°–Ω–∞—á–∞–ª–∞ –∏–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –∏–º–µ–Ω–∞ –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    const extractedNames: string[] = []
    const eventNameMap: Record<string, any> = {} // –ú–∞–ø–∞ —Å–æ–±—ã—Ç–∏–µ -> –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ –∏–º—è
    
    for (const event of relevantEvents) {
      const summary = event.summary || ''
      const summaryLower = summary.toLowerCase()
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
      const isBirthday = (
        summaryLower.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') ||
        summaryLower.includes('–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summaryLower.includes('–¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summaryLower.includes('birthday') ||
        summaryLower.includes('–¥—Ä ') ||
        summaryLower.includes('–¥—Ä.')
      )
      
      if (isBirthday) {
        let extractedName = ''
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ Google
        if (event.calendarId === '#contacts@group.v.calendar.google.com') {
          // –í –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å–æ–±—ã—Ç–∏—è –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç —Ñ–æ—Ä–º–∞—Ç "–ò–º—è –§–∞–º–∏–ª–∏—è"
          extractedName = summary.trim()
          console.log('üìù –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ - –ò–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è:', { summary, extractedName })
        } else {
          // –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π
          // –ü–∞—Ç—Ç–µ—Ä–Ω 1: "–ò–º—è ‚Äì –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è" –∏–ª–∏ "–ò–º—è - –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è" - –±–µ—Ä–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
          let nameMatch = summary.match(/^(.+?)\s*[‚Äì-]\s*/)
          if (nameMatch) {
            extractedName = summary.trim() // –ë–µ—Ä–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—á–∏—Å—Ç–∫–∏ –≤ —Å–µ—Ä–≤–∏—Å–µ
            console.log('üìù –ü–∞—Ç—Ç–µ—Ä–Ω 1 - –ò–∑–≤–ª–µ—á–µ–Ω–æ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:', { summary, extractedName })
          }
          
          // –ü–∞—Ç—Ç–µ—Ä–Ω 2: "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ò–º–µ–Ω–∏" –∏–ª–∏ "–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –Ü–º–µ–Ω—ñ"
          if (!extractedName) {
            nameMatch = summary.match(/(?:–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è|–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è|birthday)\s+(.+?)$/i)
            if (nameMatch) {
              extractedName = nameMatch[1].trim()
              console.log('üìù –ü–∞—Ç—Ç–µ—Ä–Ω 2 - –ò–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è:', { summary, extractedName })
            }
          }
          
          // –ü–∞—Ç—Ç–µ—Ä–Ω 3: "–ó –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!" - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –Ω–µ—Ç –∏–º–µ–Ω–∏
          if (!extractedName && (summary.toLowerCase().includes('–∑ –¥–Ω–µ–º') || summary.toLowerCase().includes('—Å –¥–Ω–µ–º'))) {
            console.log('üìù –ü–∞—Ç—Ç–µ—Ä–Ω 3 - –û–±—â–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑ –∏–º–µ–Ω–∏:', summary)
            // –î–ª—è —Ç–∞–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –Ω–µ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è
          }
          
          // –ü–∞—Ç—Ç–µ—Ä–Ω 4: –ü—Ä–æ—Å—Ç–æ –∏–º—è –≤ –Ω–∞—á–∞–ª–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
          if (!extractedName) {
            // –ò—â–µ–º –∏–º—è –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞, –µ—Å–ª–∏ –¥–∞–ª—å—à–µ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            const words = summary.split(' ')
            if (words.length >= 2) {
              const restOfTitle = words.slice(1).join(' ').toLowerCase()
              if (restOfTitle.includes('–¥–µ–Ω—å') || restOfTitle.includes('birthday') || restOfTitle.includes('–¥—Ä')) {
                extractedName = words[0].trim()
                console.log('üìù –ü–∞—Ç—Ç–µ—Ä–Ω 4 - –ò–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è –∏–∑ –Ω–∞—á–∞–ª–∞:', { summary, extractedName })
              }
            }
          }
        }
        
        if (extractedName) {
          extractedNames.push(extractedName)
          eventNameMap[event.id] = extractedName
          console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–º—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:', { eventId: event.id, extractedName })
        } else {
          console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∏–º—è –∏–∑ —Å–æ–±—ã—Ç–∏—è:', summary)
        }
      }
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
    let analysisResults: Record<string, any> = {}
    if (extractedNames.length > 0) {
      console.log(`ü§ñ –ù–∞—á–∏–Ω–∞—é –ø–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ${extractedNames.length} –∏–º–µ–Ω...`)
      try {
        analysisResults = await analyzeBatchContacts(extractedNames)
        console.log('‚úÖ –ü–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ')
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:', error)
        // Fallback: —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        extractedNames.forEach(name => {
          analysisResults[name] = { isRelative: false, recipientName: name }
        })
      }
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ
    const processedEvents: CachedCalendarEvent[] = []
    
    for (const event of relevantEvents) {
      const summary = event.summary || ''
      const summaryLower = summary.toLowerCase()
      const description = event.description || ''
      
      let type: 'birthday' | 'holiday' | 'custom' = 'holiday'
      let recipient = ''
      let relationship = ''
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
      const isBirthdayEvent = (
        summaryLower.includes('–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è') || 
        summaryLower.includes('–¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') || 
        summaryLower.includes('–¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è') ||
        summaryLower.includes('birthday') ||
        summaryLower.includes('–¥—Ä ') ||
        summaryLower.includes('–¥—Ä.') ||
        // –°–æ–±—ã—Ç–∏—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ Google
        event.calendarId === '#contacts@group.v.calendar.google.com'
      )
      
      if (isBirthdayEvent) {
        type = 'birthday'
        console.log(`üìÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: "${summary}" (–∫–∞–ª–µ–Ω–¥–∞—Ä—å: ${event.calendarId})`)
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        const extractedName = eventNameMap[event.id]
        if (extractedName && analysisResults[extractedName]) {
          const relationshipResult = analysisResults[extractedName]
          console.log('ü§ñ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è —Å–æ–±—ã—Ç–∏—è:', { eventId: event.id, extractedName, relationshipResult })
          
          if (relationshipResult.isRelative && relationshipResult.relationship) {
            relationship = relationshipResult.relationship
            recipient = '' // –î–ª—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –∏–º—è –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ–º
            console.log('‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω–æ —Ä–æ–¥–∏–Ω–Ω–∏–π –∑–≤\'—è–∑–æ–∫:', relationship)
          } else {
            recipient = relationshipResult.recipientName || extractedName
            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è:', recipient)
          }
        } else if (extractedName) {
          // Fallback –µ—Å–ª–∏ –∞–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è
          recipient = extractedName
          console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', extractedName)
        } else {
          console.log('‚ö†Ô∏è –°–æ–±—ã—Ç–∏–µ –±–µ–∑ –∏–º–µ–Ω–∏:', summary)
          // –î–ª—è —Å–æ–±—ã—Ç–∏–π –±–µ–∑ –∏–º–µ–Ω–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∫–∞–∫ –ø–æ–≤–æ–¥–æ–º
          recipient = ''
          relationship = ''
        }
      } else {
        console.log(`üìÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø—Ä–∞–∑–¥–Ω–∏–∫: "${summary}"`)
      }
      
      const cachedEvent: CachedCalendarEvent = {
        id: event.id || '',
        summary: summary,
        description: description,
        start: event.start,
        end: event.end,
        type: type,
        recipient: recipient,
        relationship: relationship,
        calendarName: event.calendarName || '',
        calendarId: event.calendarId || '',
        lastUpdated: new Date()
      }
      
      processedEvents.push(cachedEvent)
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const client = await clientPromise
    const db = client.db('spivanka')
    const collection = db.collection('calendar_cache')
    
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await collection.deleteOne({ userEmail: session.user.email })
    console.log('üóëÔ∏è –°—Ç–∞—Ä—ã–π –∫—ç—à —É–¥–∞–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', session.user.email)
    
    const userCalendarCache: UserCalendarCache = {
      userId: session.user.email,
      userEmail: session.user.email,
      events: processedEvents,
      lastSync: new Date(),
      nextSync: new Date(Date.now() + 24 * 60 * 60 * 1000) // –°–ª–µ–¥—É—é—â–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫—ç—à –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await collection.insertOne(userCalendarCache)
    console.log('‚úÖ –ù–æ–≤—ã–π –∫—ç—à —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', session.user.email)
    
    console.log('‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    
    return NextResponse.json({
      success: true,
      message: '–ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã',
      eventsCount: processedEvents.length,
      lastSync: userCalendarCache.lastSync,
      nextSync: userCalendarCache.nextSync
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π:', error)
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
}

// GET –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
export async function GET(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.email) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    const client = await clientPromise
    const db = client.db('spivanka')
    const collection = db.collection('calendar_cache')
    
    const userCache = await collection.findOne({ userEmail: session.user.email })
    
    if (!userCache) {
      return NextResponse.json({
        success: false,
        message: '–ö—ç—à –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è',
        events: []
      })
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª –ª–∏ –∫—ç—à
    const now = new Date()
    const cacheExpired = now > userCache.nextSync
    
    if (cacheExpired) {
      return NextResponse.json({
        success: false,
        message: '–ö—ç—à —É—Å—Ç–∞—Ä–µ–ª, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è',
        events: userCache.events || [],
        lastSync: userCache.lastSync,
        expired: true
      })
    }
    
    return NextResponse.json({
      success: true,
      events: userCache.events || [],
      lastSync: userCache.lastSync,
      nextSync: userCache.nextSync
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π:', error)
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
} 