import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { google } from 'googleapis'

export async function GET(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.email) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    console.log('üìÖ –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è:', session.user.email)

    // –°–æ–∑–¥–∞–µ–º OAuth2 –∫–ª–∏–µ–Ω—Ç
    const redirectUri = `${process.env.NEXTAUTH_URL}/api/auth/calendar/callback`
    console.log('üìÖ Redirect URI:', redirectUri)
    
    const oauth2Client = new google.auth.OAuth2(
      process.env.GOOGLE_CLIENT_ID,
      process.env.GOOGLE_CLIENT_SECRET,
      redirectUri
    )

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–º–∏ —Å–∫–æ—É–ø–∞–º–∏
    const authUrl = oauth2Client.generateAuthUrl({
      access_type: 'offline',
      prompt: 'consent',
      scope: [
        'https://www.googleapis.com/auth/calendar.readonly',
        'https://www.googleapis.com/auth/contacts.readonly'
      ],
      state: session.user.email // –ü–µ—Ä–µ–¥–∞–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ state
    })

    console.log('üìÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', authUrl)

    return NextResponse.redirect(authUrl)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error)
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
} 