import { NextRequest, NextResponse } from 'next/server'
import { getGreetingById, deleteGreeting, updateGreeting } from '@/services/databaseService'
import { getServerSession } from 'next-auth'

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const { id: greetingId } = await params
    
    const greeting = await getGreetingById(greetingId)
    
    if (!greeting) {
      return NextResponse.json(
        { success: false, error: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' },
        { status: 404 }
      )
    }
    
    return NextResponse.json({
      success: true,
      greeting
    })

  } catch (error) {
    console.error('Error fetching greeting:', error)
    return NextResponse.json(
      { 
        success: false, 
        error: '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' 
      },
      { status: 500 }
    )
  }
}

export async function PATCH(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const session = await getServerSession()
    
    if (!session?.user?.email) {
      return NextResponse.json(
        { success: false, error: 'Unauthorized' },
        { status: 401 }
      )
    }

    const { id: greetingId } = await params
    const body = await request.json()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const greeting = await getGreetingById(greetingId)
    
    if (!greeting) {
      return NextResponse.json(
        { success: false, error: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' },
        { status: 404 }
      )
    }

    if (greeting.userId !== session.user.email) {
      return NextResponse.json(
        { success: false, error: '–ù–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ü—å–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
        { status: 403 }
      )
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    const updatedGreeting = await updateGreeting(greetingId, {
      ...body,
      updatedAt: new Date().toISOString()
    })
    
    return NextResponse.json({
      success: true,
      greeting: updatedGreeting
    })

  } catch (error) {
    console.error('Error updating greeting:', error)
    return NextResponse.json(
      { 
        success: false, 
        error: '–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' 
      },
      { status: 500 }
    )
  }
}

export async function DELETE(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const session = await getServerSession()
    
    if (!session?.user?.email) {
      console.log('‚ùå DELETE: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∑–∞–ø–∏—Ç')
      return NextResponse.json(
        { success: false, error: 'Unauthorized' },
        { status: 401 }
      )
    }

    const { id: greetingId } = await params
    console.log('üóëÔ∏è DELETE: –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:', greetingId, '–≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', session.user.email)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const greeting = await getGreetingById(greetingId)
    
    if (!greeting) {
      console.log('‚ùå DELETE: –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:', greetingId)
      return NextResponse.json(
        { success: false, error: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' },
        { status: 404 }
      )
    }

    console.log('üìã DELETE: –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:', {
      id: greeting.id,
      taskId: greeting.taskId,
      userId: greeting.userId,
      recipientName: greeting.recipientName
    })

    if (greeting.userId !== session.user.email) {
      console.log('‚ùå DELETE: –ù–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è. –í–ª–∞—Å–Ω–∏–∫:', greeting.userId, '–ó–∞–ø–∏—Ç—É–≤–∞—á:', session.user.email)
      return NextResponse.json(
        { success: false, error: '–ù–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ü—å–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
        { status: 403 }
      )
    }

    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    console.log('üóëÔ∏è DELETE: –ü–æ—á–∞—Ç–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è...')
    await deleteGreeting(greetingId)
    console.log('‚úÖ DELETE: –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ')
    
    return NextResponse.json({
      success: true,
      message: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ'
    })

  } catch (error) {
    console.error('‚ùå DELETE: –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:', error)
    return NextResponse.json(
      { 
        success: false, 
        error: '–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' 
      },
      { status: 500 }
    )
  }
} 